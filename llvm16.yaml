package:
  name: llvm16
  version: 16.0.6
  epoch: 0
  description: "low-level virtual machine - core frameworks"
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - wolfi-base
      - busybox
      - ca-certificates-bundle
      - build-base
      - cmake
      - samurai
      - binutils-dev
      - libffi-dev
      - zlib-dev
      - libxml2-dev
      - pkgconf
      - python3
      - git

pipeline:
  - uses: fetch
    with:
      uri: https://github.com/llvm/llvm-project/releases/download/llvmorg-${{package.version}}/llvm-${{package.version}}.src.tar.xz
      expected-sha256: e91db44d1b3bb1c33fcea9a7d1f2423b883eaa9163d3d56ca2aa6d2f0711bc29
      extract: false

  - uses: fetch
    with:
      uri: https://github.com/llvm/llvm-project/releases/download/llvmorg-${{package.version}}/cmake-${{package.version}}.src.tar.xz
      expected-sha256: 39d342a4161095d2f28fb1253e4585978ac50521117da666e2b1f6f28b62f514
      extract: false

  - runs: |
      # This build is a bit unusual and requires two separate checkouts next to each other
      # We need to set extract: false above and do the unpacking manually here.
      # We then set working-directory below in the pipeline to the llvm checkout.
      tar -xf llvm-${{package.version}}.src.tar.xz
      tar -xf cmake-${{package.version}}.src.tar.xz
      mv llvm-${{package.version}}.src llvm
      mv cmake-${{package.version}}.src cmake

  - working-directory: /home/build/llvm
    pipeline:
      - runs: |
          find /home/build/
          ffi_include_dir="$(pkg-config --cflags-only-I libffi | sed 's|^-I||g')"

          cmake -B build -G Ninja -Wno-dev \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=/usr/lib/llvm16 \
            -DCMAKE_MODULE_PATH=/home/build/cmake/Modules \
            -DFFI_INCLUDE_DIR="${ffi_include_dir}" \
            -DLLVM_BINUTILS_INCDIR=/usr/include \
            -DLLVM_BUILD_DOCS=OFF \
            -DLLVM_BUILD_EXAMPLES=OFF \
            -DLLVM_BUILD_EXTERNAL_COMPILER_RT=ON \
            -DLLVM_BUILD_LLVM_DYLIB=ON \
            -DLLVM_BUILD_TESTS=OFF \
            -DLLVM_INCLUDE_TESTS=OFF \
            -DLLVM_DEFAULT_TARGET_TRIPLE="$(uname -m)-unknown-linux-gnu" \
            -DLLVM_ENABLE_ASSERTIONS=OFF \
            -DLLVM_ENABLE_FFI=ON \
            -DLLVM_ENABLE_LIBCXX=OFF \
            -DLLVM_ENABLE_PIC=ON \
            -DLLVM_ENABLE_RTTI=ON \
            -DLLVM_ENABLE_SPHINX=OFF \
            -DLLVM_ENABLE_TERMINFO=ON \
            -DLLVM_ENABLE_ZLIB=ON \
            -DLLVM_INSTALL_UTILS=ON \
            -DLLVM_HOST_TRIPLE="$(uname -m)-unknown-linux-gnu" \
            -DLLVM_INCLUDE_EXAMPLES=OFF \
            -DLLVM_LINK_LLVM_DYLIB=ON \
            -DLLVM_APPEND_VC_REV=OFF \
            -DLLVM_INCLUDE_BENCHMARKS=OFF
      - runs: |
          cmake --build build --target llvm-tblgen
      - runs: |
          cmake --build build
      - runs: |
          DESTDIR="${{targets.destdir}}" cmake --install build
      - runs: |
          mkdir -p "${{targets.destdir}}"/usr/bin

          for path in "${{targets.destdir}}"/usr/lib/llvm16/bin/*; do
            name=${path##*/}
            ln -s ../lib/llvm16/bin/$name "${{targets.destdir}}"/usr/bin/$name
          done
      - runs: |
          cd "${{targets.destdir}}"/usr/lib/llvm16

          mkdir -p "${{targets.destdir}}"/usr/lib/
          for path in "${{targets.destdir}}"/usr/lib/llvm16/lib/*.a; do
            name=${path##*/}
            ln -s ../lib/llvm16/lib/$name "${{targets.destdir}}"/usr/lib/$name
          done

          mkdir -p "${{targets.destdir}}"/usr/lib/
          for path in "${{targets.destdir}}"/usr/lib/llvm16/lib/*.so*; do
            name=${path##*/}
            ln -s ../lib/llvm16/lib/$name "${{targets.destdir}}"/usr/lib/$name
          done
      - working-directory: ${{targets.destdir}}/usr/lib/llvm16
        runs: |
          mkdir -p "${{targets.destdir}}"/usr/lib/cmake
          mv lib/cmake/llvm "${{targets.destdir}}"/usr/lib/cmake/llvm16
          ln -s llvm16 "${{targets.destdir}}"/usr/lib/cmake/llvm
      - uses: strip

subpackages:
  - name: "libLLVM-16"
    description: "LLVM 16 runtime library"
    pipeline:
      - runs: |
          soname="libLLVM-16.so"
          sonamefull="libLLVM-${{package.version}}.so"

          mkdir -p "${{targets.subpkgdir}}"/usr/lib/llvm16/lib/
          mv "${{targets.destdir}}"/usr/lib/llvm16/lib/$soname "${{targets.subpkgdir}}"/usr/lib/
          ln -s $soname "${{targets.subpkgdir}}"/usr/lib/$sonamefull
          ln -s $soname "${{targets.subpkgdir}}"/usr/lib/libLLVM.so

          ln -s ../../$soname "${{targets.subpkgdir}}"/usr/lib/llvm16/lib/$soname
          ln -s ../../$soname "${{targets.subpkgdir}}"/usr/lib/llvm16/lib/$sonamefull

          rm -f "${{targets.destdir}}"/usr/lib/llvm16/lib/$soname
          rm -f "${{targets.destdir}}"/usr/lib/llvm16/lib/$sonamefull

          rm -f "${{targets.destdir}}"/usr/lib/$soname
          rm -f "${{targets.destdir}}"/usr/lib/$sonamefull

  - name: "llvm16-dev"
    description: "headers for llvm16"
    pipeline:
      - uses: split/dev
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/llvm16/bin
          mv "${{targets.destdir}}"/usr/lib/llvm16/bin/llvm-config "${{targets.subpkgdir}}"/usr/lib/llvm16/bin/

          soname="libLLVM-16.so"
          sonamefull="libLLVM-${{package.version}}.so"

          rm -f "${{targets.subpkgdir}}"/usr/lib/llvm16/lib/$soname
          rm -f "${{targets.subpkgdir}}"/usr/lib/llvm16/lib/$sonamefull

          rm -f "${{targets.subpkgdir}}"/usr/lib/libLLVM.so
          rm -f "${{targets.subpkgdir}}"/usr/lib/$soname
          rm -f "${{targets.subpkgdir}}"/usr/lib/$sonamefull
    dependencies:
      runtime:
        - libLLVM-16

update:
  enabled: true
  github:
    identifier: llvm/llvm-project
    strip-prefix: llvmorg-
    tag-filter: llvmorg-16
    use-tag: true
