package:
  name: gcc-6
  version: 6.5.0
  epoch: 2
  description: "the GNU compiler collection"
  copyright:
    - license: GPL-3.0-or-later
  options:
    no-provides: true
  dependencies:
    runtime:
      - binutils
      - libstdc++-6-dev

environment:
  contents:
    packages:
      - wolfi-baselayout
      - busybox
      - build-base
      - ca-certificates-bundle
      - texinfo
      - gawk
      - bison
      - flex-dev
      - gmp-dev
      - mpfr-dev
      - mpc-dev
      - isl-dev
      - zlib-dev
      - make
      - zip

pipeline:
  - uses: fetch
    with:
      uri: https://ftp.gnu.org/gnu/gcc/gcc-${{package.version}}/gcc-${{package.version}}.tar.xz
      expected-sha256: 7ef1796ce497e89479183702635b14bb7a46b53249209a5e0f999bebf4740945

  - uses: fetch
    with:
      uri: https://sourceware.org/pub/java/ecj-4.9.jar
      expected-sha256: 9506e75b862f782213df61af67338eb7a23c35ff425d328affc65585477d34cd
      extract: false

  - uses: patch
    with:
      patches: fix-cxxflags-passing.patch

  - uses: patch
    with:
      patches: fix-gcj-arm-thumb.patch

  - uses: patch
    with:
      patches: fix-gcj-stdgnu14-link.patch

  - uses: patch
    with:
      patches: 0017-pr93402.patch

  - uses: patch
    with:
      patches: isl-0.22.patch

  # Rename ecj-4.9.jar to ecj.jar because the build system requires it.
  # https://gcc.gnu.org/ml/java/2008-04/msg00027.html
  - runs: |
      mv ecj-*.jar ecj.jar

  - working-directory: /home/build/build
    pipeline:
      - name: 'Configure GCC'
        runs: |
          # We use generic CFLAGS, because GCC 6 is older than the CFLAGS we normally use.
          CFLAGS="-O2 -Wall -pipe -Wno-error=format-security"
          CXXFLAGS="-O2 -Wall -pipe -Wno-error=format-security"
          CPPFLAGS="-O2 -Wall -pipe -Wno-error=format-security"
          export CFLAGS CXXFLAGS CPPFLAGS

          ../configure \
            --prefix=/usr \
            --program-suffix="-6.5" \
            --disable-nls \
            --disable-werror \
            --with-glibc-version=2.35 \
            --enable-initfini-array \
            --disable-nls \
            --disable-multilib \
            --disable-libatomic \
            --disable-libsanitizer \
            --enable-host-shared \
            --enable-shared \
            --enable-threads \
            --enable-tls \
            --enable-default-pie \
            --enable-default-ssp \
            --with-system-zlib \
            --enable-languages=c,c++,java \
            --enable-bootstrap \
            --enable-gnu-indirect-function \
            --enable-gnu-unique-object \
            --enable-version-specific-runtime-libs \
            --with-linker-hash-style=gnu \
            --with-jvm-root=/usr/lib/jvm/java-1.5-gcj

          make -j$(nproc)
          make -j$(nproc) install DESTDIR="${{targets.contextdir}}"

  # We don't want to keep the .la files.
  - runs: |
      find ${{targets.contextdir}} -name '*.la' -print -exec rm \{} \;

  # We don't support static-linking for Java.
  - runs: |
      gcclibdir=/usr/lib/gcc/${{host.triplet.gnu}}/${{package.version}}
      gcclibexec=/usr/libexec/gcc/${{host.triplet.gnu}}/${{package.version}}

      sed -i -e 's/lib: /&%{static:%eJava programs cannot be linked statically}/' \
        "${{targets.contextdir}}"/$gcclibdir/libgcj.spec

      find "${{targets.contextdir}}" -name libgcj.a -o -name libgtkpeer.a \
        -o -name libgjsmalsa.a -o -name libgcj-tools.a \
        -o -name libjvm.a -o -name libgij.a -o -name libgcj_bc.a \
        -o -name libjavamath.a | xargs rm -f

      mv "${{targets.contextdir}}"/usr/lib64/libcc1* "${{targets.contextdir}}"/$gcclibdir/

  # We don't want libjvm.so or libjavamath.so to have providers generated for it.
  - runs: |
      find "${{targets.contextdir}}" -name libjvm.so -o -name libjavamath.so | xargs chmod 644

  # Remove libffi
  - runs: |
      rm -f "${{targets.contextdir}}"/usr/lib/libffi* "${{targets.contextdir}}"/usr/share/man/man3/ffi*
      find "${{targets.contextdir}}" -name 'ffi*.h' | xargs rm -f

  - name: 'Clean up documentation'
    runs: |
      rm -rf ${{targets.contextdir}}/usr/share/info

  - uses: strip

subpackages:
  - name: 'gcc-6-doc'
    pipeline:
      - uses: split/manpages

  - name: 'libstdc++-6'
    pipeline:
      - runs: |
          gcclibdir=/usr/lib/gcc/${{host.triplet.gnu}}/${{package.version}}

          mkdir -p "${{targets.contextdir}}"/$gcclibdir
          mv "${{targets.contextdir}}"/$gcclibdir/*++.so.* "${{targets.contextdir}}"/$gcclibdir
    options:
      no-provides: true

  - name: 'libstdc++-6-dev'
    pipeline:
      - runs: |
          gcclibdir=/usr/lib/gcc/${{host.triplet.gnu}}/${{package.version}}

          mkdir -p "${{targets.contextdir}}"/$gcclibdir
          mkdir -p "${{targets.contextdir}}"/$gcclibdir/include
          mkdir -p "${{targets.contextdir}}"/usr/share/gcc-${{package.version}}/python/libstdcxx
          mv "${{targets.contextdir}}"/$gcclibdir/*++.a "${{targets.contextdir}}"/$gcclibdir/
          mv "${{targets.contextdir}}"/$gcclibdir/libstdc++.so "${{targets.contextdir}}"/$gcclibdir/
          mv "${{targets.contextdir}}"/$gcclibdir/include/*++* "${{targets.contextdir}}"/$gcclibdir/include/
          mv "${{targets.contextdir}}"/usr/share/gcc-${{package.version}}/python/libstdcxx/* \
            "${{targets.contextdir}}"/usr/share/gcc-${{package.version}}/python/libstdcxx/

  - name: "libgcj-6"
    description: 'GNU runtime for Java, version 6'
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/bin
          cd "${{targets.contextdir}}"/usr/bin

          mv aot-compile-* gappletviewer-* gc-analyze-* gij-* \
             gjar-* gjarsigner-* gkeytool-* gnative2ascii-* gorbd-* \
             grmic-* grmid-* grmiregistry-* gserialver-* \
             gtnameserv-* jv-convert-* rebuild-gcj-db-* \
             "${{targets.contextdir}}"/usr/bin/

          cd "${{targets.contextdir}}"
          for i in $(find usr/lib -name jc1 -o -name jvgenmain); do
            mkdir -p "${{targets.contextdir}}"/${i%/*}
            mv "${{targets.contextdir}}"/$i "${{targets.contextdir}}"/$i
          done

          gcclibdir=/usr/lib/gcc/${{host.triplet.gnu}}/${{package.version}}
          mkdir -p "${{targets.contextdir}}"/$gcclibdir
          mv "${{targets.contextdir}}"/$gcclibdir/gcj-* \
             "${{targets.contextdir}}"/$gcclibdir/logging.properties \
             "${{targets.contextdir}}"/$gcclibdir/security \
             "${{targets.contextdir}}"/$gcclibdir

          mv "${{targets.contextdir}}"/$gcclibdir/libgcj_bc.so \
             "${{targets.contextdir}}"/$gcclibdir/libgcj*.so.* \
             "${{targets.contextdir}}"/$gcclibdir/libgij.so.* \
             "${{targets.contextdir}}"/usr/lib

          mkdir -p "${{targets.contextdir}}"/usr/share/
          mv "${{targets.contextdir}}"/usr/share/java "${{targets.contextdir}}"/usr/share/

  - name: 'gcj-6'
    description: 'GCC support for Java, version 6'
    dependencies:
      runtime:
        - gcc-6
        - libgcj-6
        - zlib-dev
    pipeline:
      - runs: |
          gcclibdir=/usr/lib/gcc/${{host.triplet.gnu}}/${{package.version}}

          mkdir -p "${{targets.contextdir}}"/usr/lib64
          mkdir -p "${{targets.contextdir}}"/usr/bin
          mkdir -p "${{targets.contextdir}}"/$gcclibdir

          cd "${{targets.contextdir}}"/usr/bin
          mv gcj-* gjavah-* gcjh-* jcf-dump-* "${{targets.contextdir}}"/usr/bin/

          cd "${{targets.contextdir}}"

          for i in $(find usr/ -name ecj1 -o -name jc1 -o -name jvgenmain); do
            mkdir -p "${{targets.contextdir}}"/${i%/*}
            mv "${{targets.contextdir}}"/$i "${{targets.contextdir}}"/$i
          done

          for i in "${{targets.contextdir}}"/$gcclibdir/libgcj*.so; do
            if [ -L "$i" ]; then
              mv "$i" "${{targets.contextdir}}"/usr/lib/
            fi
          done

          mv "${{targets.contextdir}}"/$gcclibdir/libgij.so \
             "${{targets.contextdir}}"/$gcclibdir/libgcj.spec \
             "${{targets.contextdir}}"/$gcclibdir/

update:
  # EOL upstream, needed for Java 8 bootstrap only.
  enabled: false
