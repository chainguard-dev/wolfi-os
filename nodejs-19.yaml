package:
  name: nodejs-19
  version: 19.7.0
  epoch: 0
  description: "JavaScript runtime built on V8 engine"
  copyright:
    - license: MIT
environment:
  contents:
    packages:
      - brotli-dev
      - c-ares-dev
      - icu-dev
      - linux-headers
      - nghttp2-dev
      - openssl-dev
      - python3
      - py3-jinja2
      - samurai
      - zlib-dev
      - wolfi-base
      - busybox
      - ca-certificates-bundle
      - build-base
pipeline:
  - uses: fetch
    with:
      uri: https://nodejs.org/dist/v${{package.version}}/node-v${{package.version}}.tar.gz
      expected-sha256: 3b16e85ce3442caaac35e0f28974a6fa381529c3a6caac1cc36234efa24a9e72
  - name: Configure and build
    runs: |
      # Add defines recommended in libuv readme.
      common_flags="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

      # Compiling with O2 instead of Os increases binary size by ~10%
      # (53.1 MiB -> 58.6 MiB), but also increases performance by ~20%
      # according to v8/web-tooling-benchmark. Node.js is quite huge anyway;
      # there are better options for size constrained environments.
      export CFLAGS="${CFLAGS/-Os/-O2} $common_flags"
      export CXXFLAGS="${CXXFLAGS/-Os/-O2} $common_flags"
      export CPPFLAGS="${CPPFLAGS/-Os/-O2} $common_flags"
      python3 configure.py --prefix=/usr \
        --shared-brotli \
        --shared-zlib \
        --shared-openssl \
        --shared-cares \
        --shared-nghttp2 \
        --ninja \
        --openssl-use-def-ca-store \
        --with-icu-default-data-dir=$(icu-config --icudatadir) \
        --with-intl=system-icu \
        --without-corepack

        make BUILDTYPE=Release
  - uses: autoconf/make
  - uses: autoconf/make-install
  - runs: |
      make DESTDIR="$${{targets.destdir}}" install
  - uses: strip
