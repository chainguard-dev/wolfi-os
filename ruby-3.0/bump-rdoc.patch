# Source: https://github.com/ruby/ruby/pull/10319.patch

From e623e9e7f0058e8ae1391cabf38aa859e9bdc5b0 Mon Sep 17 00:00:00 2001
From: Hiroshi SHIBATA <hsbt@ruby-lang.org>
Date: Thu, 21 Mar 2024 15:47:40 +0900
Subject: [PATCH] Merge RDoc-6.3.4.1

---
 lib/rdoc/rdoc.rb               |  5 ++--
 lib/rdoc/store.rb              | 45 ++++++++++++++++++++--------------
 lib/rdoc/version.rb            |  2 +-
 test/rdoc/test_rdoc_options.rb |  6 ++---
 4 files changed, 33 insertions(+), 25 deletions(-)

diff --git a/lib/rdoc/rdoc.rb b/lib/rdoc/rdoc.rb
index bb58513d2c8aab..6c69553588f529 100644
--- a/lib/rdoc/rdoc.rb
+++ b/lib/rdoc/rdoc.rb
@@ -162,11 +162,12 @@ def load_options
     RDoc.load_yaml

     begin
-      options = YAML.load_file '.rdoc_options'
+      options = YAML.safe_load_file '.rdoc_options', permitted_classes: [RDoc::Options, Symbol]
     rescue Psych::SyntaxError
+      raise RDoc::Error, "#{options_file} is not a valid rdoc options file"
     end

-    return RDoc::Options.new if options == false # Allow empty file.
+    return RDoc::Options.new unless options # Allow empty file.

     raise RDoc::Error, "#{options_file} is not a valid rdoc options file" unless
       RDoc::Options === options or Hash === options
diff --git a/lib/rdoc/store.rb b/lib/rdoc/store.rb
index 5ba671ca1b6216..c793e49ed845ed 100644
--- a/lib/rdoc/store.rb
+++ b/lib/rdoc/store.rb
@@ -556,9 +556,7 @@ def load_all
   def load_cache
     #orig_enc = @encoding

-    File.open cache_path, 'rb' do |io|
-      @cache = Marshal.load io.read
-    end
+    @cache = marshal_load(cache_path)

     load_enc = @cache[:encoding]

@@ -615,9 +613,7 @@ def load_class klass_name
   def load_class_data klass_name
     file = class_file klass_name

-    File.open file, 'rb' do |io|
-      Marshal.load io.read
-    end
+    marshal_load(file)
   rescue Errno::ENOENT => e
     error = MissingFileError.new(self, file, klass_name)
     error.set_backtrace e.backtrace
@@ -630,14 +626,10 @@ def load_class_data klass_name
   def load_method klass_name, method_name
     file = method_file klass_name, method_name

-    File.open file, 'rb' do |io|
-      obj = Marshal.load io.read
-      obj.store = self
-      obj.parent =
-        find_class_or_module(klass_name) || load_class(klass_name) unless
-          obj.parent
-      obj
-    end
+    obj = marshal_load(file)
+    obj.store = self
+    obj.parent ||= find_class_or_module(klass_name) || load_class(klass_name)
+    obj
   rescue Errno::ENOENT => e
     error = MissingFileError.new(self, file, klass_name + method_name)
     error.set_backtrace e.backtrace
@@ -650,11 +642,9 @@ def load_method klass_name, method_name
   def load_page page_name
     file = page_file page_name

-    File.open file, 'rb' do |io|
-      obj = Marshal.load io.read
-      obj.store = self
-      obj
-    end
+    obj = marshal_load(file)
+    obj.store = self
+    obj
   rescue Errno::ENOENT => e
     error = MissingFileError.new(self, file, page_name)
     error.set_backtrace e.backtrace
@@ -976,4 +966,21 @@ def unique_modules
     @unique_modules
   end

+  private
+  def marshal_load(file)
+    File.open(file, 'rb') {|io| Marshal.load(io, MarshalFilter)}
+  end
+
+  MarshalFilter = proc do |obj|
+    case obj
+    when true, false, nil, Array, Class, Encoding, Hash, Integer, String, Symbol, RDoc::Text
+    else
+      unless obj.class.name.start_with?("RDoc::")
+        raise TypeError, "not permitted class: #{obj.class.name}"
+      end
+    end
+    obj
+  end
+  private_constant :MarshalFilter
+
 end
diff --git a/lib/rdoc/version.rb b/lib/rdoc/version.rb
index b4203186f7d0f2..8d6ae1012c302d 100644
--- a/lib/rdoc/version.rb
+++ b/lib/rdoc/version.rb
@@ -3,6 +3,6 @@ module RDoc
   ##
   # RDoc version you are using

-  VERSION = '6.3.3'
+  VERSION = '6.3.4.1'

 end
diff --git a/test/rdoc/test_rdoc_options.rb b/test/rdoc/test_rdoc_options.rb
index 140c4afc9bc8ec..f547f5bff3f32f 100644
--- a/test/rdoc/test_rdoc_options.rb
+++ b/test/rdoc/test_rdoc_options.rb
@@ -145,7 +145,7 @@ def test_init_with_encoding

     @options.encoding = Encoding::IBM437

-    options = YAML.load YAML.dump @options
+    options = YAML.safe_load(YAML.dump(@options), permitted_classes: [RDoc::Options, Symbol])

     assert_equal Encoding::IBM437, options.encoding
   end
@@ -161,7 +161,7 @@ def test_init_with_trim_paths
 - /etc
     YAML

-    options = YAML.load yaml
+    options = YAML.safe_load(yaml, permitted_classes: [RDoc::Options, Symbol])

     assert_empty options.rdoc_include
     assert_empty options.static_path
@@ -749,7 +749,7 @@ def test_write_options

       assert File.exist? '.rdoc_options'

-      assert_equal @options, YAML.load(File.read('.rdoc_options'))
+      assert_equal @options, YAML.safe_load(File.read('.rdoc_options'), permitted_classes: [RDoc::Options, Symbol])
     end
   end
