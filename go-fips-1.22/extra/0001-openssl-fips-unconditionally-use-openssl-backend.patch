From bd90a04bd645268676c292889156a04a3763e415 Mon Sep 17 00:00:00 2001
From: Scott Moser <smoser@chainguard.dev>
Date: Tue, 19 Mar 2024 20:18:18 +0000
Subject: [PATCH 1/2] openssl-fips: unconditionally use openssl backend

This should unconditionally set FIPS mode on or panic.
---
 src/crypto/internal/backend/openssl.go | 28 +++++---------------------
 1 file changed, 5 insertions(+), 23 deletions(-)

diff --git a/src/crypto/internal/backend/openssl.go b/src/crypto/internal/backend/openssl.go
index 3d3a9a36ee..e4c4548c04 100644
--- a/src/crypto/internal/backend/openssl.go
+++ b/src/crypto/internal/backend/openssl.go
@@ -49,31 +49,13 @@ func init() {
 	if err := openssl.Init(version); err != nil {
 		panic("opensslcrypto: can't initialize OpenSSL " + version + ": " + err.Error())
 	}
-	// 0: FIPS opt-out: abort the process if it is enabled and can't be disabled.
-	// 1: FIPS required: abort the process if it is not enabled and can't be enabled.
-	// other values: do not override OpenSSL configured FIPS mode.
-	var fips string
-	if v, ok := syscall.Getenv("GOLANG_FIPS"); ok {
-		fips = v
-	} else if hostFIPSModeEnabled() {
-		// System configuration can only force FIPS mode.
-		fips = "1"
-	}
-	switch fips {
-	case "0":
-		if openssl.FIPS() {
-			if err := openssl.SetFIPS(false); err != nil {
-				panic("opensslcrypto: can't disable FIPS mode for " + openssl.VersionText() + ": " + err.Error())
-			}
-		}
-	case "1":
-		if !openssl.FIPS() {
-			if err := openssl.SetFIPS(true); err != nil {
-				panic("opensslcrypto: can't enable FIPS mode for " + openssl.VersionText() + ": " + err.Error())
-			}
+
+	if !openssl.FIPS() {
+		if err := openssl.SetFIPS(true); err != nil {
+			panic("opensslcrypto: can't enable FIPS mode for " + openssl.VersionText() + ": " + err.Error())
 		}
-		enabled = true
 	}
+	enabled = true
 	sig.BoringCrypto()
 }
 
-- 
2.44.0

