Patch to avoid packaging JREs and to bump ElasticSearch to latest.
---
diff --git a/gradle.properties b/gradle.properties
index 47cc69ea67e..2bfb4ec6c39 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -13,7 +13,7 @@ projectTitle=SonarQube
 org.gradle.jvmargs=-Xmx2048m
 org.gradle.caching=true
 org.gradle.vfs.watch=true
-elasticSearchServerVersion=8.13.4
+elasticSearchServerVersion=8.14.1
 projectType=application
 artifactoryUrl=https://repox.jfrog.io/repox
 jre_release_name=jdk-17.0.11+9
diff --git a/sonar-application/build.gradle b/sonar-application/build.gradle
index 9dab90e85b7..c8d7d6eeef9 100644
--- a/sonar-application/build.gradle
+++ b/sonar-application/build.gradle
@@ -108,24 +108,10 @@ downloadLicenses {
   dependencyConfiguration = 'appLicenses'
 }

-tasks.register('downloadJres') {
-  doLast {
-    def jresMetadata = new JsonSlurper().parse(file(layout.projectDirectory.dir('src/main/resources/jres-metadata.json').asFile))
-    jresMetadata.each { jre ->
-      downloadJreFromAdoptium(jre.os, jre.arch, jre.filename, jre.sha256)
-    }
-  }
-}
-
 task zip(type: Zip, dependsOn: [configurations.compileClasspath]) {
   duplicatesStrategy DuplicatesStrategy.EXCLUDE
   def archiveDir = "sonarqube-$project.version"

-  dependsOn tasks.downloadJres
-  into("${archiveDir}/jres") {
-    from(layout.buildDirectory.dir('jres'))
-  }
-
   if(release) {
     dependsOn tasks.downloadLicenses
     into("${archiveDir}/") {
@@ -338,7 +324,7 @@ task zip(type: Zip, dependsOn: [configurations.compileClasspath]) {
 // Check the size of the archive
 zip.doLast {
   def minLength = 340000000
-  def maxLength = 732000000
+  def maxLength = 800000000

   def length = archiveFile.get().asFile.length()
   if (length < minLength)
