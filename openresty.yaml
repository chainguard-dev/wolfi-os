package:
  name: openresty
  version: 1.25.3.1
  epoch: 0
  description: High Performance Web Platform Based on Nginx and LuaJIT
  dependencies:
    runtime:
      - gd
      - geoip
      - libgcc
      - libxslt
      - luajit
      - openssl
      - pcre
      - perl
      - zlib

environment:
  contents:
    packages:
      - build-base
      - busybox
      - coreutils
      - gd-dev
      - geoip-dev
      - libxml2-dev
      - libxslt-dev
      - linux-headers
      - luajit-dev
      - openssl-dev
      - pcre-dev
      - perl-dev
      - readline-dev
      - zlib-dev

pipeline:
  - uses: fetch
    with:
      uri: https://openresty.org/download/openresty-${{package.version}}.tar.gz
      expected-sha256: 32ec1a253a5a13250355a075fe65b7d63ec45c560bbe213350f0992a57cd79df

  - runs: |
      ./configure \
        --build=${{host.triplet.gnu}} \
        --with-pcre \
        --with-cc-opt='-DNGX_LUA_ABORT_AT_PANIC -I/usr/include' \
        --with-ld-opt='-L/usr/lib -Wl,-rpath,/usr/lib' \
        --with-compat \
        --conf-path=/etc/nginx/nginx.conf \
        --sbin-path=/usr/sbin/nginx \
        --error-log-path=/var/log/openresty/error.log \
        --http-log-path=/var/log/openresty/access.log \
        --pid-path=/var/log/openresty/nginx.pid \
        --lock-path=/var/log/openresty/nginx.lock \
        --http-client-body-temp-path=/var/run/openresty/nginx-client-body \
        --http-proxy-temp-path=/var/run/openresty/nginx-proxy \
        --http-fastcgi-temp-path=/var/run/openresty/nginx-fastcgi \
        --http-uwsgi-temp-path=/var/run/openresty/nginx-uwsgi \
        --http-scgi-temp-path=/var/run/openresty/nginx-scgi \
        --with-file-aio \
        --with-http_addition_module \
        --with-http_auth_request_module \
        --with-http_dav_module \
        --with-http_flv_module \
        --with-http_geoip_module=dynamic \
        --with-http_gunzip_module \
        --with-http_gzip_static_module \
        --with-http_image_filter_module=dynamic \
        --with-http_mp4_module \
        --with-http_random_index_module \
        --with-http_realip_module \
        --with-http_secure_link_module \
        --with-http_slice_module \
        --with-http_ssl_module \
        --with-http_stub_status_module \
        --with-http_sub_module \
        --with-http_v2_module \
        --with-http_v3_module \
        --with-http_xslt_module=dynamic \
        --with-ipv6 \
        --with-mail \
        --with-mail_ssl_module \
        --with-md5-asm \
        --with-sha1-asm \
        --with-stream \
        --with-stream_ssl_module \
        --with-threads \
        --with-luajit=/usr \
        --with-luajit-xcflags='-DLUAJIT_NUMMODE=2 -DLUAJIT_ENABLE_LUA52COMPAT' \
        --with-pcre-jit

  - uses: autoconf/make

  - uses: autoconf/make-install

  - name: Create symlinks
    runs: |
      mkdir -p ${{targets.destdir}}/usr/bin
      for file in md2pod.pl nginx-xml2pod openresty opm resty restydoc restydoc-index; do
        ln -sf /usr/local/openresty/bin/$file ${{targets.destdir}}/usr/bin/$file
      done
      mkdir -p ${{targets.destdir}}/var/run/openresty/
      ln -sf /dev/stdout ${{targets.destdir}}/var/log/openresty/access.log
      ln -sf /dev/stderr ${{targets.destdir}}/var/log/openresty/error.log

  - name: Setup default config files
    runs: |
      mkdir -p ${{targets.destdir}}/etc/nginx/conf.d
      cp nginx.conf ${{targets.destdir}}/etc/nginx/nginx.conf
      cp default.conf ${{targets.destdir}}/etc/nginx/conf.d/default.conf


  - uses: strip

test:
  environment:
    contents:
      packages:
        - curl
  pipeline:
    - name: Check if resty utility is available
      runs: |
        resty -h
    - name: Run a simple Lua script
      runs: |
        resty -e 'print("hello")' | grep "hello" || exit 1
    - name: Setup configuration
      runs: |
        mkdir -p tests/logs tests/conf
        cat <<EOF > tests/conf/nginx.conf
        worker_processes  1;
        error_log logs/error.log;
        events {
            worker_connections 1024;
        }
        http {
            server {
                listen 8080;
                location / {
                    default_type text/html;
                    content_by_lua_block {
                        ngx.say("<p>hello, world</p>")
                    }
                }
            }
        }
        EOF
    - name: Start nginx server
      runs: |
        cd tests
        nginx -p `pwd`/ -c conf/nginx.conf
    - name: Access web service
      runs: |
        curl -s http://localhost:8080 | grep "hello, world" || exit 1

update:
  enabled: true
  release-monitor:
    identifier: 231952
