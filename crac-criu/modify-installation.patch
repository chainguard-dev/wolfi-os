Description: Modify installation scripts for Ubuntu
  The crac-criu package current serves as a dependency
  for the openjdk-*-crac packages only. This patch
  reduces the installation to only what the latter need
  i.e. the usr/sbin/crac-criu binary. Other components
  like crac-compel, shared libraries, man pages and the
  Python bindings (crit) are not installed.
Author: Pushkar Kulkarni <pushkar.kulkarni@canonical.com>
Forwarded: not-needed
Last-Update: 2024-08-09

--- a/lib/Makefile
+++ b/lib/Makefile
@@ -2,7 +2,7 @@
 CRIU_A			:= libcrac-criu.a
 UAPI_HEADERS		:= lib/c/criu.h images/rpc.proto images/rpc.pb-c.h criu/include/version.h
 
-all-y	+= lib-c lib-a lib-py
+all-y	+= lib-c lib-a
 
 PYTHON_EXTERNALLY_MANAGED := $(shell $(PYTHON) -c 'import os, sysconfig; print(int(os.path.isfile(os.path.join(sysconfig.get_path("stdlib"), "EXTERNALLY-MANAGED"))))')
 PIP_BREAK_SYSTEM_PACKAGES := 0
@@ -38,13 +38,12 @@
 
 clean-lib:
 	$(Q) $(MAKE) $(build)=lib/c clean
-	$(Q) $(MAKE) $(build)=lib/pycriu clean
 .PHONY: clean-lib
 clean: clean-lib
 cleanup-y	+= lib/c/$(CRIU_SO) lib/c/$(CRIU_A) lib/c/criu.pc
 mrproper: clean
 
-install: lib-c lib-a lib-py lib/c/criu.pc.in
+install: lib-c lib-a lib/c/criu.pc.in
 	$(E) "  INSTALL " lib
 	$(Q) mkdir -p $(DESTDIR)$(LIBDIR)
 	$(Q) install -m 755 lib/c/$(CRIU_SO) $(DESTDIR)$(LIBDIR)/$(CRIU_SO).$(CRIU_SO_VERSION_MAJOR).$(CRIU_SO_VERSION_MINOR)
@@ -57,18 +56,6 @@
 	$(Q) mkdir -p $(DESTDIR)$(LIBDIR)/pkgconfig
 	$(Q) sed -e 's,@version@,$(CRIU_VERSION),' -e 's,@libdir@,$(LIBDIR),' -e 's,@includedir@,$(dir $(INCLUDEDIR)/crac-criu/criu/),' lib/c/criu.pc.in > lib/c/criu.pc
 	$(Q) install -m 644 lib/c/criu.pc $(DESTDIR)$(LIBDIR)/pkgconfig/crac-criu.pc
-ifeq ($(PYTHON_EXTERNALLY_MANAGED),1)
-ifeq ($(PIP_BREAK_SYSTEM_PACKAGES),0)
-	$(E) "  SKIP INSTALL pycriu: Externally managed python environment (See PEP 668 for more information)"
-	$(E) "  Consider using PIP_BREAK_SYSTEM_PACKAGES=1 make install"
-else
-	$(E) "  INSTALL " pycriu
-	$(Q) $(PYTHON) -m pip install --upgrade --ignore-installed --prefix=$(DESTDIR)$(PREFIX) ./lib
-endif
-else
-	$(E) "  INSTALL " pycriu
-	$(Q) $(PYTHON) -m pip install --upgrade --ignore-installed --prefix=$(DESTDIR)$(PREFIX) ./lib
-endif
 .PHONY: install
 
 uninstall:
@@ -80,16 +67,4 @@
 	$(Q) $(RM) $(addprefix $(DESTDIR)$(INCLUDEDIR)/crac-criu/criu/,$(notdir $(UAPI_HEADERS)))
 	$(E) " UNINSTALL" pkgconfig/crac-criu.pc
 	$(Q) $(RM) $(addprefix $(DESTDIR)$(LIBDIR)/pkgconfig/,crac-criu.pc)
-ifeq ($(PYTHON_EXTERNALLY_MANAGED),1)
-ifeq ($(PIP_BREAK_SYSTEM_PACKAGES),0)
-	$(E) " SKIP UNINSTALL pycriu: Externally managed python environment (See PEP 668 for more information)"
-	$(E) " Consider using PIP_BREAK_SYSTEM_PACKAGES=1 make uninstall"
-else
-	$(E) " UNINSTALL" pycriu
-	$(Q) $(PYTHON) ./scripts/uninstall_module.py --prefix=$(DESTDIR)$(PREFIX) pycriu
-endif
-else
-	$(E) " UNINSTALL" pycriu
-	$(Q) $(PYTHON) ./scripts/uninstall_module.py --prefix=$(DESTDIR)$(PREFIX) pycriu
-endif
 .PHONY: uninstall
--- a/crit/Makefile
+++ b/crit/Makefile
@@ -1,40 +1,5 @@
-PYTHON_EXTERNALLY_MANAGED := $(shell $(PYTHON) -c 'import os, sysconfig; print(int(os.path.isfile(os.path.join(sysconfig.get_path("stdlib"), "EXTERNALLY-MANAGED"))))')
-PIP_BREAK_SYSTEM_PACKAGES := 0
-
-VERSION_FILE := $(if $(obj),$(addprefix $(obj)/,crit/version.py),crit/version.py)
-
-all-y	+= ${VERSION_FILE}
-cleanup-y	+= ${VERSION_FILE}
-
-${VERSION_FILE}:
-	$(Q) echo "__version__ = '${CRIU_VERSION}'" > $@
-
-install: ${VERSION_FILE}
-ifeq ($(PYTHON_EXTERNALLY_MANAGED),1)
-ifeq ($(PIP_BREAK_SYSTEM_PACKAGES),0)
-	$(E) "  SKIP INSTALL crit: Externally managed python environment (See PEP 668 for more information)"
-	$(E) "  Consider using PIP_BREAK_SYSTEM_PACKAGES=1 make install"
-else
-	$(E) "  INSTALL " crit
-	$(Q) $(PYTHON) -m pip install --upgrade --ignore-installed --prefix=$(DESTDIR)$(PREFIX) ./crit
-endif
-else
-	$(E) "  INSTALL " crit
-	$(Q) $(PYTHON) -m pip install --upgrade --ignore-installed --prefix=$(DESTDIR)$(PREFIX) ./crit
-endif
+install:
 .PHONY: install
 
 uninstall:
-ifeq ($(PYTHON_EXTERNALLY_MANAGED),1)
-ifeq ($(PIP_BREAK_SYSTEM_PACKAGES),0)
-	$(E) " SKIP UNINSTALL crit: Externally managed python environment (See PEP 668 for more information)"
-	$(E) " Consider using PIP_BREAK_SYSTEM_PACKAGES=1 make uninstall"
-else
-	$(E) " UNINSTALL" crit
-	$(Q) $(PYTHON) ./scripts/uninstall_module.py --prefix=$(DESTDIR)$(PREFIX) crit
-endif
-else
-	$(E) " UNINSTALL" crit
-	$(Q) $(PYTHON) ./scripts/uninstall_module.py --prefix=$(DESTDIR)$(PREFIX) crit
-endif
 .PHONY: uninstall
--- a/Makefile.install
+++ b/Makefile.install
@@ -54,7 +54,7 @@
 	$(Q) $(MAKE) $(build)=compel/plugins install
 .PHONY: install-compel
 
-install: install-man install-lib install-crit install-criu install-compel install-amdgpu_plugin ;
+install: install-criu ;
 .PHONY: install
 
 uninstall:
--- a/criu/Makefile
+++ b/criu/Makefile
@@ -141,10 +141,6 @@
 	$(E) "  INSTALL " $(obj)/criu
 	$(Q) mkdir -p $(DESTDIR)$(SBINDIR)
 	$(Q) install -m 755 $(obj)/criu $(DESTDIR)$(SBINDIR)/crac-criu
-	$(Q) mkdir -p $(DESTDIR)$(INCLUDEDIR)/crac-criu/criu/
-	$(Q) install -m 644 $(UAPI_HEADERS) $(DESTDIR)$(INCLUDEDIR)/crac-criu/criu/
-	$(Q) mkdir -p $(DESTDIR)$(LIBEXECDIR)/criu/scripts
-	$(Q) install -m 755 scripts/systemd-autofs-restart.sh $(DESTDIR)$(LIBEXECDIR)/criu/scripts
 	$(E) "  INSTALL " scripts/criu-ns
 	$(Q) install -m 755 scripts/criu-ns $(DESTDIR)$(SBINDIR)/crac-criu-ns
 .PHONY: install
@@ -152,9 +148,6 @@
 uninstall:
 	$(E) " UNINSTALL" criu
 	$(Q) $(RM) $(addprefix $(DESTDIR)$(SBINDIR)/,crac-criu)
-	$(Q) $(RM) $(addprefix $(DESTDIR)$(SBINDIR)/,crac-criu-ns)
-	$(Q) $(RM) $(addprefix $(DESTDIR)$(INCLUDEDIR)/crac-criu/criu/,$(notdir $(UAPI_HEADERS)))
-	$(Q) $(RM) $(addprefix $(DESTDIR)$(LIBEXECDIR)/criu/scripts/,systemd-autofs-restart.sh)
 .PHONY: uninstall
 
 all-y += check-packages $(obj)/criu
