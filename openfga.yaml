package:
  name: openfga
  version: 1.8.3
  epoch: 1
  description: A high performance and flexible authorization/permission engine built for developers and inspired by Google Zanzibar
  copyright:
    - license: Apache-2.0

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/openfga/openfga
      tag: v${{package.version}}
      expected-commit: 21757d53bc3e6b3cef4d4679f20d92f80e92bb84

  - uses: go/build
    with:
      ldflags: |
        -X github.com/openfga/openfga/internal/build.Version=v${{package.version}}
        -X github.com/openfga/openfga/internal/build.Commit=$(git rev-parse HEAD)
        -X github.com/openfga/openfga/internal/build.Date=$(TZ="UTC" date +"%Y-%m-%dT%TZ")
      output: openfga
      packages: ./cmd/openfga

  - uses: strip

update:
  enabled: true
  github:
    identifier: openfga/openfga
    strip-prefix: v
    tag-filter: v

test:
  environment:
    contents:
      packages:
        - curl
        - go-1.23
        - jq
    environment:
      STORES_URL: localhost:8080/stores
  pipeline:
    - name: Test build with right version
      runs: |
        openfga version 2>&1 >/dev/null | grep "${{package.version}}"
    - name: Test server startup and hitting some endpoints
      uses: test/daemon-check-output
      with:
        start: openfga run
        expected_output: |
          starting openfga service...
          starting prometheus metrics server
          starting gRPC server
          starting openfga playground
          starting HTTP server
        error_strings: |
          "msg":"error"
          "level":"error"
          "panic"
          "fatal"
          failed
          Error:
          error:
          denied
        post: |
          store_id=$(curl -X POST ${STORES_URL} \
            --fail-with-body \
            --header "Content-Type: application/json" \
            --data-raw "{\"name\":\"chainguard-test\"}" | jq -r .id)
          curl -X GET ${STORES_URL}/${store_id} | grep chainguard-test

          auth_model_id=$(curl -X POST ${STORES_URL}/${store_id}/authorization-models \
            --fail-with-body \
            --header "Content-Type: application/json" \
            --data @test_auth_model.json | jq -r .authorization_model_id)
          curl -X GET ${STORES_URL}/${store_id}/authorization-models/${auth_model_id} | grep ${auth_model_id} | grep type_definitions
    - name: Test profiler
      uses: test/daemon-check-output
      with:
        start: openfga run --profiler-enabled --playground-enabled=false
        expected_output: |
          starting openfga service...
          starting pprof profiler
          starting prometheus metrics server
          starting gRPC server
          starting HTTP server
        error_strings: |
          "msg":"error"
          "level":"error"
          "panic"
          "fatal"
          failed
          Error:
          error:
          denied
        post: |
          go tool pprof -proto -seconds 10 http://localhost:3001/debug/pprof/profile
