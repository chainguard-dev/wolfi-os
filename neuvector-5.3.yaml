package:
  name: neuvector-5.3
  version: 5.3.2
  epoch: 0
  description: NeuVector Full Lifecycle Container Security Platform.
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - go
      - jansson-dev
      - jemalloc-dev
      - libnetfilter_queue-dev
      - libnfnetlink-dev
      - libpcap-dev
      - pcre-dev
      - pcre2-dev
      - userspace-rcu-dev
      - userspace-rcu-static
  environment:
    CGO_ENABLED: "1"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/neuvector/neuvector
      tag: v${{package.version}}
      expected-commit: edbdcba632835d56dcc92ba86323c8a196471289

subpackages:
  - name: ${{package.name}}-controller
    description: NeuVector Controller
    pipeline:
      - uses: go/bump
        with:
          deps: github.com/opencontainers/image-spec@v1.1.0 golang.org/x/net@v0.17.0 github.com/docker/distribution@v2.8.2-beta.1+incompatible golang.org/x/crypto@v0.22.0 gopkg.in/yaml.v3@v3.0.0-20220521103104-8f96da9f5d5e 
      - uses: go/build
        with:
          modroot: controller
          packages: .
          output: ${{package.name}}-controller
          ldflags: "-s -w"
          subpackage: "true"
          vendor: true

  - name: ${{package.name}}-agent
    description: NeuVector Agent
    pipeline:
      - uses: go/build
        with:
          modroot: agent
          packages: .
          output: ${{package.name}}-agent
          ldflags: "-s -w"
          subpackage: "true"
          vendor: true

  - name: ${{package.name}}-monitor
    description: NeuVector Monitor
    pipeline:
      - runs: |
          make -C monitor
          mkdir -p ${{targets.contextdir}}/usr/local/bin
          install -Dm755 monitor/monitor ${{targets.contextdir}}/usr/local/bin/${{package.name}}-monitor

  # - name: ${{package.name}}-dp
  #   description: NeuVector DP
  #   pipeline:
  #     - runs: |
  #         rm -rf /usr/include/urcu/map/urcu.h
  #         ln -sf /usr/include/urcu/map/urcu-mb.h /usr/include/urcu/map/urcu.h
  #         if [[ "${{build.arch}}" == "aarch64" ]]; then
  #           make -C dp
  #         else
  #           make -C dp
  #         fi
  #         mkdir -p ${{targets.contextdir}}/usr/local/bin
  #         install -Dm755 dp/dp ${{targets.contextdir}}/usr/local/bin/${{package.name}}-dp

  - name: ${{package.name}}-nstools
    description: NeuVector NSTools
    pipeline:
      - runs: |
          make -C tools/nstools
          mkdir -p ${{targets.contextdir}}/usr/local/bin
          install -Dm755 tools/nstools/nstools ${{targets.contextdir}}/usr/local/bin/${{package.name}}-nstools

  - name: ${{package.name}}-enforcer
    description: NeuVector Enforcer
    dependencies:
      runtime:
        - neuvector-agent
        - neuvector-dp
        - neuvector-monitor
        - neuvector-nstools
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/local/bin
          install -Dm755 agent/nvbench/*.rem ${{targets.contextdir}}/usr/local/bin/
          install -Dm755 agent/nvbench/*.tmpl ${{targets.contextdir}}/usr/local/bin/

  - name: ${{package.name}}-scanner
    description: NeuVector Scanner
    pipeline:
      - uses: git-checkout
        with:
          repository: https://github.com/neuvector/scanner
          destination: /tmp/scanner
      - uses: go/bump
        with:
          modroot: /tmp/scanner
          deps: github.com/containerd/containerd@v1.6.26 github.com/opencontainers/image-spec@v1.1.0 github.com/opencontainers/runc@v1.1.12 golang.org/x/net@v0.17.0 google.golang.org/grpc@v1.56.3 google.golang.org/protobuf@v1.33.0 github.com/docker/distribution@v2.8.2-beta.1+incompatible golang.org/x/sys@v0.1.0 github.com/docker/docker@v24.0.9
      - uses: go/build
        with:
          modroot: /tmp/scanner
          packages: .
          output: neuvector-scanner
          ldflags: "-s -w"
          subpackage: "true"
          vendor: true

  - name: ${{package.name}}-task
    description: NeuVector Task
    pipeline:
      - uses: go/build
        with:
          modroot: /tmp/scanner/task
          packages: .
          output: neuvector-task
          ldflags: "-s -w"
          subpackage: "true"
          vendor: true

update:
  enabled: true
  github:
    identifier: neuvector/neuvector
    tag-filter: v5.3.
    strip-prefix: v
