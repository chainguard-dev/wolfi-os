diff --git a/build/BUILD.bazel b/build/BUILD.bazel
index b83f4f4..42aa986 100644
--- a/build/BUILD.bazel
+++ b/build/BUILD.bazel
@@ -10,7 +10,6 @@ exports_files([
 # C libraries
 
 clib_deps = [
-    "@openssl",
     "@libexpat",
     "@snappy",
     "@ada",
@@ -21,7 +20,7 @@ clib_deps = [
         name = "install-%s" % get_workspace_name(k),
         src = k,
         # only install openssl headers
-        exclude = [] if k in ("@openssl",) else ["include"],
+        exclude = ["include"],
         prefix = "kong/lib" if k in ("@passwdqc", "@snappy", "@ada") else "kong",
         strip_path = "snappy" if k == "@snappy" else "ada" if k == "@ada" else "",
     )
@@ -47,7 +46,6 @@ kong_rules_group(
 kong_rules_group(
     name = "cacheable-targets",
     propagates = [
-        "@openssl",
         "@libexpat",
         "@atc_router",
         "@simdjson_ffi",
@@ -73,7 +71,6 @@ kong_install(
     prefix = "openresty",
     deps = [
         ":install-openresty-luajit",
-        ":install-openssl",
     ],
 )
 
diff --git a/build/luarocks/BUILD.luarocks.bazel b/build/luarocks/BUILD.luarocks.bazel
index b23ad96..d9dda79 100644
--- a/build/luarocks/BUILD.luarocks.bazel
+++ b/build/luarocks/BUILD.luarocks.bazel
@@ -40,7 +40,6 @@ kong_template_genrule(
     name = "luarocks_exec",
     srcs = [
         "@libexpat",
-        "@openssl",
     ] + select({
         "@kong//:any-cross": ["@cross_deps_libyaml//:libyaml"],
         "//conditions:default": [
diff --git a/build/luarocks/templates/luarocks_exec.sh b/build/luarocks/templates/luarocks_exec.sh
index 10515f8..f8cc445 100644
--- a/build/luarocks/templates/luarocks_exec.sh
+++ b/build/luarocks/templates/luarocks_exec.sh
@@ -3,7 +3,6 @@
 # template variables starts
 libexpat_path="{{@@libexpat//:libexpat}}"
 libxml2_path="invalid"
-openssl_path="{{@@openssl//:openssl}}"
 luarocks_host_path="{{@@luarocks//:luarocks_host}}"
 luajit_path="{{@@openresty//:luajit}}"
 kongrocks_path="invalid"
@@ -27,7 +26,6 @@ ROCKS_CONFIG=$(readlink -f "$ROCKS_DIR/../luarocks_config.lua")
 
 EXPAT_DIR=$root_path/$libexpat_path
 LIBXML2_DIR=$root_path/$libxml2_path
-OPENSSL_DIR=$root_path/$openssl_path
 
 # The Bazel rules doesn't export the `libexpat.so` file,
 # it only exports something like `libexpat.so.1.6.0`,
@@ -115,8 +113,6 @@ fi
 # some distros has BINPRM_BUF_SIZE smaller than the shebang generated,
 # which is usually more than 160 bytes
 $host_luajit $root_path/$LUAROCKS_HOST/bin/luarocks \$private_rocks_args \$@ \\
-    OPENSSL_DIR=$OPENSSL_DIR \\
-    CRYPTO_DIR=$OPENSSL_DIR \\
     EXPAT_DIR=$EXPAT_DIR \\
     LIBXML2_DIR=$LIBXML2_DIR \\
     YAML_DIR=$YAML_DIR
diff --git a/build/openresty/BUILD.openresty.bazel b/build/openresty/BUILD.openresty.bazel
index 81ad172..157f6b7 100644
--- a/build/openresty/BUILD.openresty.bazel
+++ b/build/openresty/BUILD.openresty.bazel
@@ -147,10 +147,8 @@ CONFIGURE_OPTIONS = [
     "--without-http_rds_csv_module",
     "--with-luajit=$$EXT_BUILD_DEPS/luajit",
     "--with-cc-opt=\"-I$$EXT_BUILD_DEPS/pcre/include\"",
-    "--with-cc-opt=\"-I$$EXT_BUILD_DEPS/openssl/include\"",
     "--with-cc-opt=\"-I$$EXT_BUILD_DEPS/luajit/include\"",
     "--with-ld-opt=\"-L$$EXT_BUILD_DEPS/pcre/lib\"",
-    "--with-ld-opt=\"-L$$EXT_BUILD_DEPS/openssl/lib\"",
     "--with-ld-opt=\"-L$$EXT_BUILD_DEPS/luajit/lib\"",
     "--with-ld-opt=\"-L$$EXT_BUILD_DEPS/lib\"",
     # Here let's try not having --disable-new-dtags; --disable-new-dtags creates rpath instead of runpath
@@ -326,7 +324,6 @@ configure_make(
     visibility = ["//visibility:public"],
     deps = [
         "@openresty//:luajit",
-        "@openssl",
         "@pcre",
     ] + select({
         "@kong//:any-cross": [
diff --git a/build/openresty/openssl/BUILD.bazel b/build/openresty/openssl/BUILD.bazel
deleted file mode 100644
index 5970c67..0000000
--- a/build/openresty/openssl/BUILD.bazel
+++ /dev/null
@@ -1,5 +0,0 @@
-load("@kong//build/openresty/openssl:openssl.bzl", "build_openssl")
-
-build_openssl(
-    name = "openssl",
-)
diff --git a/build/openresty/openssl/README.md b/build/openresty/openssl/README.md
deleted file mode 100644
index 8cc90c2..0000000
--- a/build/openresty/openssl/README.md
+++ /dev/null
@@ -1,10 +0,0 @@
-This target is modified from https://github.com/bazelbuild/rules_foreign_cc/tree/main/examples/third_party
-with following changes:
-
-- Read version from requirements.txt
-- Updated `build_file` to new path under //build/openresty
-- Remove Windows build support
-- Removed the bazel mirror as it's missing latest versions
-- Remove runnable test for now until cross compile has been sorted out
-- Use system Perl for now
-- Updated to be reusable
\ No newline at end of file
diff --git a/build/openresty/openssl/openssl.bzl b/build/openresty/openssl/openssl.bzl
deleted file mode 100644
index 1390dd6..0000000
--- a/build/openresty/openssl/openssl.bzl
+++ /dev/null
@@ -1,94 +0,0 @@
-"""An openssl build file based on a snippet found in the github issue:
-https://github.com/bazelbuild/rules_foreign_cc/issues/337
-
-Note that the $(PERL) "make variable" (https://docs.bazel.build/versions/main/be/make-variables.html)
-is populated by the perl toolchain provided by rules_perl.
-"""
-
-load("@kong_bindings//:variables.bzl", "KONG_VAR")
-load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make")
-
-# Read https://wiki.openssl.org/index.php/Compilation_and_Installation
-
-CONFIGURE_OPTIONS = select({
-    "@kong//:aarch64-linux-glibc-cross": [
-        "linux-aarch64",
-    ],
-    "@kong//:x86_64-linux-glibc-cross": [
-        "linux-x86_64",
-    ],
-    # no extra args needed for non-cross builds
-    "//conditions:default": [],
-}) + [
-    "-g",
-    "-O3",  # force -O3 even we are using --debug (for example on CI)
-    "shared",
-    "-DPURIFY",
-    "no-threads",
-    "no-tests",
-    "--prefix=%s/kong" % KONG_VAR["INSTALL_DESTDIR"],
-    "--openssldir=%s/kong" % KONG_VAR["INSTALL_DESTDIR"],
-    "--libdir=lib",  # force lib instead of lib64 (multilib postfix)
-    "-Wl,-rpath,%s/kong/lib" % KONG_VAR["INSTALL_DESTDIR"],
-] + select({
-    "@kong//:debug_flag": ["--debug"],
-    "//conditions:default": [],
-})
-
-def build_openssl(
-        name = "openssl"):
-    extra_make_targets = []
-    extra_configure_options = []
-
-    native.filegroup(
-        name = name + "-all_srcs",
-        srcs = native.glob(
-            include = ["**"],
-            exclude = ["*.bazel"],
-        ),
-    )
-
-    configure_make(
-        name = name,
-        configure_command = "config",
-        configure_in_place = True,
-        configure_options = CONFIGURE_OPTIONS + extra_configure_options,
-        env = select({
-            "@platforms//os:macos": {
-                "AR": "/usr/bin/ar",
-            },
-            "//conditions:default": {},
-        }),
-        lib_source = ":%s-all_srcs" % name,
-        # Note that for Linux builds, libssl must come before libcrypto on the linker command-line.
-        # As such, libssl must be listed before libcrypto
-        out_shared_libs = select({
-            "@platforms//os:macos": [
-                "libssl.3.dylib",
-                "libcrypto.3.dylib",
-                "ossl-modules/legacy.dylib",
-                "engines-3/capi.dylib",
-                "engines-3/loader_attic.dylib",
-                "engines-3/padlock.dylib",
-            ],
-            "//conditions:default": [
-                "libssl.so.3",
-                "libcrypto.so.3",
-                "ossl-modules/legacy.so",
-                "engines-3/afalg.so",
-                "engines-3/capi.so",
-                "engines-3/loader_attic.so",
-                "engines-3/padlock.so",
-            ],
-        }),
-        out_include_dir = "include/openssl",
-        targets = [
-            "-j" + KONG_VAR["NPROC"],
-            # don't set the prefix by --prefix switch, but only override the install destdir using INSTALLTOP
-            # while install. this makes both bazel and openssl (build time generated) paths happy.
-            "install_sw INSTALLTOP=$BUILD_TMPDIR/$INSTALL_PREFIX",
-        ] + extra_make_targets,
-        # TODO: uncomment this to allow bazel build a perl if not installed on system
-        # toolchains = ["@rules_perl//:current_toolchain"],
-        visibility = ["//visibility:public"],
-    )
diff --git a/build/openresty/openssl/openssl_repositories.bzl b/build/openresty/openssl/openssl_repositories.bzl
deleted file mode 100644
index a2b70d7..0000000
--- a/build/openresty/openssl/openssl_repositories.bzl
+++ /dev/null
@@ -1,18 +0,0 @@
-"""A module defining the third party dependency OpenSSL"""
-
-load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
-load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
-load("@kong_bindings//:variables.bzl", "KONG_VAR")
-
-def openssl_repositories():
-    version = KONG_VAR["OPENSSL"]
-    maybe(
-        http_archive,
-        name = "openssl",
-        build_file = "//build/openresty/openssl:BUILD.bazel",
-        sha256 = KONG_VAR["OPENSSL_SHA256"],
-        strip_prefix = "openssl-" + version,
-        urls = [
-            "https://github.com/openssl/openssl/releases/download/openssl-" + version + "/openssl-" + version + ".tar.gz",
-        ],
-    )
diff --git a/build/openresty/repositories.bzl b/build/openresty/repositories.bzl
index f4cafe9..6ced994 100644
--- a/build/openresty/repositories.bzl
+++ b/build/openresty/repositories.bzl
@@ -7,7 +7,6 @@ load("//build:build_system.bzl", "git_or_local_repository")
 load("//build/openresty/ada:ada_repositories.bzl", "ada_repositories")
 load("//build/openresty/atc_router:atc_router_repositories.bzl", "atc_router_repositories")
 load("//build/openresty/brotli:brotli_repositories.bzl", "brotli_repositories")
-load("//build/openresty/openssl:openssl_repositories.bzl", "openssl_repositories")
 load("//build/openresty/pcre:pcre_repositories.bzl", "pcre_repositories")
 load("//build/openresty/simdjson_ffi:simdjson_ffi_repositories.bzl", "simdjson_ffi_repositories")
 load("//build/openresty/snappy:snappy_repositories.bzl", "snappy_repositories")
@@ -31,7 +30,6 @@ filegroup(
 
 def openresty_repositories():
     pcre_repositories()
-    openssl_repositories()
     simdjson_ffi_repositories()
     atc_router_repositories()
     wasmx_repositories()

