package:
  name: rust-stage0
  version: 1.76.0
  epoch: 0
  description: "bootstrap package for rust"
  copyright:
    - license: Apache-2.0 AND MIT
  dependencies:
    runtime:
    provides:
      # This must be updated whenever rust is updated to the latest version.
      # Rust requires at least the previously released version for bootstrapping,
      # e.g. rust 1.77 requires rust 1.76 or later to build.
      - rust=1.76.0

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle

pipeline:
  - assertions:
      required-steps: 1
    pipeline:
      - if: ${{build.arch}} == 'x86_64'
        uses: fetch
        with:
          uri: https://static.rust-lang.org/dist/rust-${{package.version}}-x86_64-unknown-linux-gnu.tar.gz
          expected-sha256: 9d589d2036b503cc45ecc94992d616fb3deec074deb36cacc2f5c212408f7399
      - if: ${{build.arch}} == 'aarch64'
        uses: fetch
        with:
          uri: https://static.rust-lang.org/dist/rust-${{package.version}}-aarch64-unknown-linux-gnu.tar.gz
          expected-sha256: 2e8313421e8fb673efdf356cdfdd4bc16516f2610d4f6faa01327983104c05a0

  - runs: |
      sh install.sh --verbose --destdir="${{targets.destdir}}" --prefix="/usr"

  - runs: |
      mv "${{targets.destdir}}"/usr/etc "${{targets.destdir}}"/etc

  - uses: strip

subpackages:
  - name: "rust-stage0-doc"
    description: "rust stage0 documentation"
    pipeline:
      - uses: split/manpages
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/share
          mv "${{targets.destdir}}"/usr/share/doc "${{targets.subpkgdir}}"/usr/share/

update:
  enabled: false
  exclude-reason: don't auto update stage 0 packages

test:
  pipeline:
    # AUTOGENERATED
    - runs: |
        cargo --version
        cargo-clippy --version
        cargo-fmt --version
        clippy-driver --version
        rust-analyzer --version
        rust-gdbgui --help
        rustc --version
        rustdoc --version
        rustfmt --version
        cargo --help
        cargo-clippy --help
        cargo-fmt --help
        clippy-driver --help
        rust-analyzer --help
        rustc --help
        rustdoc --help
        rustfmt --help
