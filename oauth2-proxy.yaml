package:
  name: oauth2-proxy
  version: 7.4.0
  epoch: 6
  description: Reverse proxy and static file server that provides authentication using various providers to validate accounts by email, domain or group.
  copyright:
    - license: MIT

environment:
  contents:
    packages:
      - wolfi-baselayout
      - busybox
      - build-base
      - go
      - openssl
      - ca-certificates-bundle

pipeline:
  - uses: fetch
    with:
      uri: https://github.com/oauth2-proxy/oauth2-proxy/archive/refs/tags/v${{package.version}}.tar.gz
      expected-sha256: f9c5791537b1286b5985b0123f19ad84d390a7fffc1edc1b7c50c5d66c67ebdd

  - uses: go/build
    with:
      packages: .
      output: oauth2-proxy
      ldflags: -s -w -X github.com/oauth2-proxy/oauth2-proxy/v7/pkg/version.Version=${{package.version}}
      # GHSA-vvpx-j8f3-3w6h
      deps: golang.org/x/net@v0.7.0

  - runs: |
      # Make sure there is at least an empty key file.
      # This is useful for GCP App Engine custom runtime builds, because you cannot use multiline variables in their app.yaml, so you have to build the
      # key into the container and then tell it where it is by setting OAUTH2_PROXY_JWT_KEY_FILE=/etc/ssl/private/jwt_signing_key.pem in app.yaml instead.
      mkdir -p "${{targets.destdir}}/etc/ssl/private/"
      touch "${{targets.destdir}}/etc/ssl/private/jwt_signing_key.pem"

  - uses: strip

update:
  enabled: true
  github:
    identifier: oauth2-proxy/oauth2-proxy
    strip-prefix: v
