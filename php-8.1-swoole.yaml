package:
  name: php-8.1-swoole
  version: 5.1.5
  epoch: 1
  description: "Coroutine-based concurrency library for PHP"
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - ${{package.name}}-config
      - brotli
      - php-${{vars.phpMM}}

var-transforms:
  - from: ${{package.name}}
    match: ^php-(\d+\.\d+)-.*$
    replace: "$1"
    to: phpMM

environment:
  contents:
    packages:
      - autoconf
      - brotli-dev
      - build-base
      - busybox
      - php-${{vars.phpMM}}
      - php-${{vars.phpMM}}-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/swoole/swoole-src
      tag: "v${{package.version}}"
      expected-commit: c713f73211c9f896e86e6f1744bff7f9fed9ee6f

  - name: Prepare build
    runs: phpize

  - name: Configure
    runs: |
      set -x
      ./configure

  - uses: autoconf/make

  - name: Make install
    runs: |
      set -x
      INSTALL_ROOT="${{targets.destdir}}" DESTDIR="${{targets.destdir}}" make install

subpackages:
  - name: ${{package.name}}-config
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}/etc/php/conf.d"
          echo "extension=swoole.so" > "${{targets.subpkgdir}}/etc/php/conf.d/swoole.ini"

update:
  enabled: true
  github:
    identifier: swoole/swoole-src
    strip-prefix: v
    tag-filter: v
    use-tag: true

test:
  environment:
    contents:
      packages:
        - php-8.1
        - php-8.1-swoole
        - php-8.1-swoole-config
        - busybox
        - netcat-openbsd
        - curl
  pipeline:
    - name: "Verify extension installation"
      runs: |
        php -m | grep -q swoole
    - name: "Test extension configuration"
      runs: |
        grep -q "extension=swoole.so" /etc/php/conf.d/swoole.ini
    - name: "Test basic coroutine functionality"
      runs: |
        php -r '
        use Swoole\Coroutine;
        Coroutine::create(function() {
            echo "Coroutine works!";
        });
        Swoole\Event::wait();
        ' | grep -q "Coroutine works!"
    - name: "Test HTTP server functionality"
      runs: |
        php -r '
        $server = new Swoole\HTTP\Server("127.0.0.1", 9501);
        $server->on("start", function($server) {
            echo "Server started\n";
        });
        $server->on("request", function($request, $response) {
            $response->end("Hello World");
            $server->shutdown();
        });
        $server->start();
        ' &
        sleep 1
        response=$(curl -s http://127.0.0.1:9501)
        test "$response" = "Hello World"
