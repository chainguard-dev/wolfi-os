package:
  name: tensorflow-core
  description: Framework for data-graph oriented computing (core libraries, oneDNN build)
  version: 2.18.0
  epoch: 0
  copyright:
    - license: Apache-2.0
  resources:
    cpu: 65
    memory: 64Gi

environment:
  contents:
    packages:
      - bash
      - bazelisk
      - bazelisk-default
      - build-base
      - c-ares-dev
      - clang-16
      - clang-16-dev
      - coreutils
      - curl-dev
      - cython~0
      - gcc-12-default
      - giflib-dev
      - hdf5
      - hdf5-dev
      - icu-dev
      - isl-dev
      - libjpeg-turbo-dev
      - libpng-dev
      - libstdc++-12
      - libstdc++-12-dev
      - llvm-lld-16-dev
      - llvm16
      - llvm16-dev
      - mpc-dev
      - openjdk-11-default-jdk
      - openssl-dev
      - patchelf
      - perl
      - py3-gpep517
      - py3-installer
      - py3-supported-keras-applications
      - py3-supported-keras-preprocessing
      - py3-supported-pybind11
      - py3-supported-build-base
      - py3-supported-python-dev
      - wolfi-base
      - zlib-dev

vars:
  pypi-package: tensorflow-core
  import: tensorflow

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/tensorflow/tensorflow
      expected-commit: 6550e4bd80223cdb8be6c3afd1f81e86a4d433c3
      tag: v${{package.version}}

  - runs: |
      export PYTHON_BIN_PATH=/usr/bin/python
      export TF_PYTHON_VERSION=3.10
      export USE_DEFAULT_PYTHON_LIB_PATH=1
      export TF_NEED_JEMALLOC=1
      export TF_NEED_KAFKA=1
      export TF_NEED_OPENCL_SYCL=0
      export TF_NEED_AWS=1
      export TF_NEED_GCP=1
      export TF_NEED_HDFS=1
      export TF_NEED_S3=1
      export TF_ENABLE_XLA=1
      export TF_NEED_GDR=0
      export TF_NEED_VERBS=0
      export TF_NEED_OPENCL=0
      export TF_NEED_MPI=0
      export TF_NEED_TENSORRT=0
      export TF_NEED_NGRAPH=0
      export TF_NEED_IGNITE=0
      export TF_NEED_ROCM=0
      # Add cython back here when TF is on 3.12
      export TF_SYSTEM_LIBS="boringssl,curl,gif,icu,libjpeg_turbo,nasm,png,zlib,cython"
      export TF_SET_ANDROID_WORKSPACE=0
      export TF_DOWNLOAD_CLANG=0
      export TF_NEED_CUDA=0
      export TF_CUDA_CLANG=0
      export CLANG_CUDA_COMPILER_PATH=/usr/bin/clang
      export CC_OPT_FLAGS="$CFLAGS -O3"

      ./configure

      bazel --bazelrc=.tf_configure.bazelrc build --config=mkl_threadpool --config=opt //tensorflow:libtensorflow.so //tensorflow:libtensorflow_cc.so //tensorflow:install_headers //tensorflow:libtensorflow_framework.so //tensorflow/tools/pip_package:wheel
      mkdir /home/build/pip-pkg-tmp
      find bazel-bin/tensorflow/tools/pip_package -iname "*.whl" -exec cp {} /home/build/pip-pkg-tmp \;

  - runs: |
      install -d "${{targets.destdir}}"/usr/include/tensorflow
      cp -r bazel-bin/tensorflow/include/* "${{targets.destdir}}"/usr/include/tensorflow/

      WHEEL_PACKAGE=$(find /home/build/pip-pkg-tmp -name "tensor*.whl")
      python -m installer --destdir="${{targets.destdir}}" $WHEEL_PACKAGE

      _pyver=$(python -c 'import sys; print(str(sys.version_info[0]) + "." + str(sys.version_info[1]))')
      _srch_path="${{targets.destdir}}/usr/lib/python"$_pyver"/site-packages/tensorflow/include"
      cp -rf "${_srch_path}"/* "${{targets.destdir}}"/usr/include/tensorflow/
      _pkgver=${{package.version}}

      tensorflow/c/generate-pc.sh --prefix=/usr --version=${_pkgver}
      sed -e 's@/include$@/include/tensorflow@' -i tensorflow.pc -i tensorflow_cc.pc
      install -Dm644 tensorflow.pc "${{targets.destdir}}"/usr/lib/pkgconfig/tensorflow.pc
      install -Dm644 tensorflow_cc.pc "${{targets.destdir}}"/usr/lib/pkgconfig/tensorflow_cc.pc

      install -Dm755 bazel-bin/tensorflow/libtensorflow.so "${{targets.destdir}}"/usr/lib/libtensorflow.so.${_pkgver}
      ln -s libtensorflow.so.${_pkgver} "${{targets.destdir}}"/usr/lib/libtensorflow.so.${_pkgver:0:1}
      ln -s libtensorflow.so.${_pkgver:0:1} "${{targets.destdir}}"/usr/lib/libtensorflow.so

      install -Dm755 bazel-bin/tensorflow/libtensorflow_cc.so "${{targets.destdir}}"/usr/lib/libtensorflow_cc.so.${_pkgver}
      ln -s libtensorflow_cc.so.${_pkgver} "${{targets.destdir}}"/usr/lib/libtensorflow_cc.so.${_pkgver:0:1}
      ln -s libtensorflow_cc.so.${_pkgver:0:1} "${{targets.destdir}}"/usr/lib/libtensorflow_cc.so

      install -Dm755 bazel-bin/tensorflow/libtensorflow_framework.so "${{targets.destdir}}"/usr/lib/libtensorflow_framework.so.${_pkgver}
      ln -s libtensorflow_framework.so.${_pkgver} "${{targets.destdir}}"/usr/lib/libtensorflow_framework.so.${_pkgver:0:1}
      ln -s libtensorflow_framework.so.${_pkgver:0:1} "${{targets.destdir}}"/usr/lib/libtensorflow_framework.so

      install -Dm644 tensorflow/c/c_api.h "${{targets.destdir}}"/usr/include/tensorflow/tensorflow/c/c_api.h
      install -Dm644 LICENSE "${{targets.destdir}}"/usr/share/licenses/${pkgname}/LICENSE

  - uses: strip

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provider-priority: ${{range.value}}
      provides:
        - py3-${{vars.pypi-package}}
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            imports: |
              import ${{vars.import}}

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}

  - name: tensorflow-dev
    description: Tensorflow development headers
    pipeline:
      - uses: split/dev
    test:
      pipeline:
        - uses: test/pkgconf

update:
  enabled: true
  github:
    identifier: tensorflow/tensorflow
    strip-prefix: v
    tag-filter: v
