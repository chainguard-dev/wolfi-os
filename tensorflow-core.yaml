package:
  name: tensorflow-core
  description: Framework for data-graph oriented computing (core libraries, oneDNN build)
  version: 2.16.1
  epoch: 0
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - bash
      - bazelisk
      - bazelisk-default
      - build-base
      - c-ares-dev
      - clang-16
      - clang-16-dev
      - cython~0
      - coreutils
      - curl-dev
      - gcc-12-default
      - giflib-dev
      - icu-dev
      - libjpeg-turbo-dev
      - libpng-dev
      - libstdc++-12
      - libstdc++-12-dev
      - llvm-lld-16-dev
      - llvm16
      - llvm16-dev
      - openjdk-11-default-jdk
      - openssl-dev
      - patchelf
      - perl
      - python-3-dev
      - wolfi-base
      - zlib-dev
      - hdf5
      - hdf5-dev
      - clang-16
      - clang-16-dev
      - py3-gpep517
      - py3-installer
      - py3-keras-applications
      - py3-keras-preprocessing
      - py3-packaging
      - py3-pybind11
      - py3-pybind11-dev
      - py3-requests
      - py3-setuptools
      - py3-wheel

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/tensorflow/tensorflow
      expected-commit: 5bc9d26649cca274750ad3625bd93422617eed4b
      tag: v${{package.version}}

  - runs: |
      export PYTHON_BIN_PATH=/usr/bin/python
      export TF_PYTHON_VERSION=3.10
      export USE_DEFAULT_PYTHON_LIB_PATH=1
      export TF_NEED_JEMALLOC=1
      export TF_NEED_KAFKA=1
      export TF_NEED_OPENCL_SYCL=0
      export TF_NEED_AWS=1
      export TF_NEED_GCP=1
      export TF_NEED_HDFS=1
      export TF_NEED_S3=1
      export TF_ENABLE_XLA=1
      export TF_NEED_GDR=0
      export TF_NEED_VERBS=0
      export TF_NEED_OPENCL=0
      export TF_NEED_MPI=0
      export TF_NEED_TENSORRT=0
      export TF_NEED_NGRAPH=0
      export TF_NEED_IGNITE=0
      export TF_NEED_ROCM=0
      # Add cython back here when TF is on 3.12
      export TF_SYSTEM_LIBS="boringssl,curl,gif,icu,libjpeg_turbo,nasm,png,zlib,cython"
      export TF_SET_ANDROID_WORKSPACE=0
      export TF_DOWNLOAD_CLANG=0
      export TF_NEED_CUDA=0
      export TF_CUDA_CLANG=0
      export CLANG_CUDA_COMPILER_PATH=/usr/bin/clang
      export CC_OPT_FLAGS="$CFLAGS -O3"

      ./configure

      bazel --bazelrc=.tf_configure.bazelrc build --config=mkl_threadpool --config=opt //tensorflow:libtensorflow.so //tensorflow:libtensorflow_cc.so //tensorflow:install_headers //tensorflow/tools/pip_package:build_pip_package
      bazel-bin/tensorflow/tools/pip_package/build_pip_package /home/build/pip-pkg-tmp

  - runs: |
      WHEEL_PACKAGE=$(find /home/build/pip-pkg-tmp -name "tensor*.whl")
      pip install --no-cache-dir --root="${{targets.destdir}}" --prefix=/usr $WHEEL_PACKAGE
      find ${{targets.destdir}} -name "*.pyc" -exec rm -rf '{}' +

  - uses: strip

subpackages:
  - name: py3-tensorflow-core
    description: Tensorflow Python API
    dependencies:
      provides:
        - so:libbfloat16.so.so=0
    pipeline:
      - runs: |
          _pyver=$(python -c 'import sys; print(str(sys.version_info[0]) + "." + str(sys.version_info[1]))')
          _pypath="/usr/lib/python${_pyver}"
          mkdir -p "${{targets.contextdir}}"/usr/lib
          mkdir -p "${{targets.contextdir}}"/usr/bin
          mv "${{targets.destdir}}"${_pypath} "${{targets.contextdir}}"${_pypath}
          mv "${{targets.destdir}}"/usr/bin "${{targets.contextdir}}"/usr/bin
          find "${{targets.contextdir}}"${_pypath} -name "libtensorflow*.so*" -exec rm -rf '{}' +

  - name: tensorflow-dev
    description: Tensorflow development headers
    pipeline:
      - uses: split/dev

update:
  enabled: true
  github:
    identifier: tensorflow/tensorflow
    strip-prefix: v
    tag-filter: v
