package:
  name: neuvector-manager
  version: 5.4.0
  epoch: 1
  description: NeuVector Security Center Admin Console.
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - busybox
      - ca-certificates
      - iproute2
      - neuvector-manager-cli
      - openjdk-11-default-jvm
      - procps

vars:
  py-version: 3.12

environment:
  environment:
    JAVA_OPTS: "-Xms2g -Xmx3g"
  contents:
    packages:
      - build-base
      - busybox
      - nodejs
      - npm
      - openjdk-11
      - openjdk-11-default-jvm
      - py${{vars.py-version}}-build-base
      - py${{vars.py-version}}-click
      - py${{vars.py-version}}-requests
      - py${{vars.py-version}}-six
      - py${{vars.py-version}}-wcwidth
      - python-${{vars.py-version}}
      - sbt
      - wget
      - zip

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 3e1b728efd32feb7f575877866ee5be506e5b047
      repository: https://github.com/neuvector/manager
      tag: v${{package.version}}

  # The version mismatch notification is misleading when the NV version isn't set via a label
  # We do not set image labels so disable the notification altogether to avoid confusion
  - uses: patch
    with:
      patches: disable_version_mismatch_notif.patch

  - runs: |
      # Build UI
      npm install --legacy-peer-deps --prefix admin/webapp
      npm run build --prefix admin/webapp

      # Build and compress JAR
      sbt admin/assembly
      zip -d admin/target/scala-2.11/admin-assembly-1.0.jar rest-management-private-classpath\*

      # Unfortunately, a lot of things are hardcoded to /usr/local/...
      mkdir -p ${{targets.contextdir}}/usr/local/bin
      install -Dm755 admin/target/scala-2.11/admin-assembly-1.0.jar ${{targets.contextdir}}/usr/local/bin/
      install -Dm755 scripts/* ${{targets.contextdir}}/usr/local/bin/

  - uses: strip

subpackages:
  - name: ${{package.name}}-cli
    description: NeuVector Manager CLI
    dependencies:
      runtime:
        - py${{vars.py-version}}-click
        - py${{vars.py-version}}-requests
        - py${{vars.py-version}}-six
        - py${{vars.py-version}}-wcwidth
    pipeline:
      - runs: |
          # Setup virtual environment
          python${{vars.py-version}} -m venv .venv --system-site-packages

          # README.md lists dependencies deps here are those not
          # packaged in wolfi.  Packaged libs versions must be listed in both
          # * build environment - so that --system-site-packages sees them
          #   and does not add them to the venv
          # * as runtime deps so they can be used at runtime.
          .venv/bin/pip install --no-compile cmd2 prettytable

          # Remove pip from venv
          .venv/bin/pip uninstall --yes pip

          # Upstream places this at /. Let's put it in /usr/share/...
          runpath="usr/share/neuvector-manager-cli"
          bindir="$runpath/.venv/bin"
          mkdir -p "${{targets.contextdir}}/$runpath"
          mv .venv "${{targets.contextdir}}/$runpath"

          # Install CLI
          mkdir -p ${{targets.contextdir}}/usr/local/bin
          install -Dm755 cli/cli.py "${{targets.contextdir}}/$bindir/cli"
          ln -sf "/$bindir/cli" ${{targets.contextdir}}/usr/local/bin/cli
          cp -r cli/prog "${{targets.contextdir}}/$bindir/"

          # Update shbang to use venv
          sed -i "s|^#!.*python3[^ ]*|#!/$bindir/python3|g" ${{targets.contextdir}}/$bindir/cli
    test:
      pipeline:
        - runs: |
            cli -h

test:
  pipeline:
    - runs: |
        java -jar /usr/local/bin/admin-assembly-1.0.jar & sleep 2; kill $!

update:
  enabled: true
  ignore-regex-patterns:
    - '.*\-.*'
    - '.*[aA-zZ].*'
    - '^(\d)(\d)(\d)(\d).*'
  github:
    identifier: neuvector/manager
    tag-filter: v
    strip-prefix: v
    use-tag: true
