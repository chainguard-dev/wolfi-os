package:
  name: grafana
  version: 10.2.0
  epoch: 0
  description: The open and composable observability and data visualization platform.
  copyright:
    - license: AGPL-3.0-or-later
  dependencies:
    runtime:
      - bash

environment:
  contents:
    packages:
      - busybox
      - build-base
      - go
      - yarn
      - posix-libc-utils
      - nodejs-16
      - findutils
      - py3-setuptools
      - python3

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/grafana/grafana
      tag: v${{package.version}}
      expected-commit: ae830f687450b8a0aca94ab2d72cc08853a80fff

  - runs: |
      # Mitigate CVE-2022-41723 / GHSA-vvpx-j8f3-3w6h
      # Mitigate CVE-2023-39325, CVE-2023-3978, CVE-2023-44487
      go mod edit -replace golang.org/x/net=golang.org/x/net@v0.17.0
      go mod edit -replace go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp=go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.44.0
      go get go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace@v0.44.0
      go mod tidy

      yarn install
      yarn run build
      yarn run plugins:build-bundled

      # Our default LDFLAGS cause an issue with grafana. We need to remove '-z, noexecheap' from LDFLAGS
      # Ref https://github.com/wolfi-dev/os/issues/7419
      LDFLAGS="$(echo $LDFLAGS | sed 's/,-z,noexecheap//g')"
      make build

      mkdir -p ${{targets.destdir}}/usr/bin
      mv ./bin/linux-*/* ${{targets.destdir}}/usr/bin/

  - name: package
    runs: |
      mkdir -p ${{targets.destdir}}/usr/share/grafana/plugins-bundled
      mkdir -p ${{targets.destdir}}/usr/share/grafana/scripts
      mkdir -p ${{targets.destdir}}/usr/share/grafana/bin

      mv ./conf ${{targets.destdir}}/usr/share/grafana/
      mv ./plugins-bundled/internal ${{targets.destdir}}/usr/share/grafana/plugins-bundled/
      mv ./public ${{targets.destdir}}/usr/share/grafana/
      mv ./scripts/*.sh ${{targets.destdir}}/usr/share/grafana/scripts/

      mkdir -p ${{targets.destdir}}/etc/grafana/
      cp ${{targets.destdir}}/usr/share/grafana/conf/sample.ini ${{targets.destdir}}/etc/grafana/grafana.ini

subpackages:
  - name: grafana-oci-compat
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/opt/grafana
          mv ./packaging/docker/run.sh ${{targets.subpkgdir}}/opt/grafana/

update:
  enabled: true
  github:
    identifier: grafana/grafana
    strip-prefix: v
