package:
  name: hive
  version: 4.0.0
  epoch: 0
  description: Apache Hive
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - bash
      - openjdk-8-default-jvm
      # TODO: once the hadoop package is ready:
      # - hadoop=3.3.6
      - tez=0.10.4

vars:
  hadoop-version: 3.3.6
  tez-version: 0.10.4
  hive-home: /usr/share/java/hive
  hadoop-home: /home/build/hadoop
  java-home: /usr/lib/jvm/java-1.8-openjdk

environment:
  contents:
    packages:
      - bash
      - busybox
      - maven
      - openjdk-8
  environment:
    LANG: en_US.UTF-8
    HIVE_VERSION: 4.0.0

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/apache/hive
      tag: rel/release-${{package.version}}
      expected-commit: 183f8cb41d3dbed961ffd27999876468ff06690c # rel/release-4.0.0

  - uses: patch
    with:
      # This patch covers license check for the goal org.apache.rat:apache-rat-plugin:0.13:check
      # because the .gitconfig file for safe directories at build time should be ignored.
      patches: rat.patch

  - runs: |
      export JAVA_HOME="${{vars.java-home}}"
      mvn package -DskipTests -Dmaven.javadoc.skip=true -Pdist \
        -Dhadoop.version="${{vars.hadoop-version}}" \
        -Dtez.version="${{vars.tez-version}}"
      mkdir -p ${{targets.destdir}}${{vars.hive-home}}
      tar -xf packaging/target/apache-hive-${{package.version}}-bin.tar.gz \
        --strip-component=1 -C ${{targets.destdir}}${{vars.hive-home}}

test:
  environment:
    contents:
      packages:
        - bash
        - gpg
        - gpg-agent
        - gnupg-dirmngr
        - curl
  pipeline:
    - name: Download Hadoop
      runs: |
        gpg --keyserver hkps://keyserver.ubuntu.com --recv-key CD32D773FF41C3F9E74BDB7FB362E1C021854B9D
        curl -sLO https://dlcdn.apache.org/hadoop/common/hadoop-${{vars.hadoop-version}}/hadoop-${{vars.hadoop-version}}.tar.gz.asc
        curl -sLO https://dlcdn.apache.org/hadoop/common/hadoop-${{vars.hadoop-version}}/hadoop-${{vars.hadoop-version}}.tar.gz
        gpg --verify hadoop-${{vars.hadoop-version}}.tar.gz.asc hadoop-${{vars.hadoop-version}}.tar.gz
        mkdir ${{vars.hadoop-home}} && tar -zxf hadoop-${{vars.hadoop-version}}.tar.gz --strip-components=1 -C ${{vars.hadoop-home}}
        rm *.tar.gz*
    - name: Prepare Hadoop standalone
      runs: |
        echo "JAVA_HOME=${JAVA_HOME}" >> ${{vars.hadoop-home}}/etc/hadoop-env.sh
        echo "127.0.0.1 $(hostname)" >> /etc/hosts
    - name: Prepare HDFS directories
      runs: |
        echo "test:x:$(id -u):$(id -g):test user:/:/bin/sh:" >> /etc/passwd
        ${{vars.hadoop-home}}/bin/hadoop fs -mkdir -p /tmp
        ${{vars.hadoop-home}}/bin/hadoop fs -mkdir -p /user/hive/warehouse
        ${{vars.hadoop-home}}/bin/hadoop fs -chmod g+w /tmp
        ${{vars.hadoop-home}}/bin/hadoop fs -chmod g+w /user/hive/warehouse
    - name: Initialize the Hive metastore derby database
      runs: |
        ${{vars.hive-home}}/bin/schematool -dbType derby -initSchema
    # This test starts Beeline and HiveServer2 in the same process.
    # Ref: https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Overview
    - name: Create a table in Hive
      runs: |
        ${{vars.hive-home}}/bin/beeline -u jdbc:hive2:// --silent=true -e 'CREATE TABLE pokes (foo INT, bar STRING)' 2>/dev/null
        ${{vars.hive-home}}/bin/beeline -u jdbc:hive2:// --silent=true -e 'SHOW TABLES' 2>/dev/null | grep -q pokes

update:
  enabled: true
  ignore-regex-patterns:
    - -rc
  github:
    identifier: apache/hive
    use-tag: true
    strip-prefix: rel/release-
    tag-filter: rel/release-
