package:
  name: hive
  version: 4.0.0
  epoch: 0
  description: Apache Hive
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - bash
      - openjdk-8-default-jvm
      # TODO: once the hadoop package is ready:
      # - hadoop=3.3.6
      - tez=0.10.4

vars:
  hadoop-home: /home/build/hadoop
  hadoop-version: 3.3.6
  java-home: /usr/lib/jvm/java-1.8-openjdk
  hive-home: /usr/share/java/hive
  tez-version: 0.10.4

environment:
  contents:
    packages:
      - bash
      - busybox
      - maven
      - openjdk-8
  environment:
    LANG: en_US.UTF-8
    JAVA_HOME: ${{vars.java-home}}
    HIVE_VERSION: ${{package.version}}

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/apache/hive
      tag: rel/release-${{package.version}}
      expected-commit: 183f8cb41d3dbed961ffd27999876468ff06690c # rel/release-4.0.0

  - uses: patch
    with:
      # This patch excludes temporary directories from rat license check.
      patches: rat.patch

  - runs: |
      mvn package -DskipTests -Dmaven.javadoc.skip=true -Pdist \
        -Dhadoop.version="${{vars.hadoop-version}}" \
        -Dtez.version="${{vars.tez-version}}"
      mkdir -p ${{targets.destdir}}${{vars.hive-home}}
      tar -xf packaging/target/apache-hive-${{package.version}}-bin.tar.gz \
        --strip-component=1 -C ${{targets.destdir}}${{vars.hive-home}}

test:
  environment:
    contents:
      packages:
        - bash
    environment:
      JAVA_HOME: ${{vars.java-home}}
      HADOOP_HOME: ${{vars.hadoop-home}}
  pipeline:
    - if: ${{build.arch}} == 'x86_64'
      name: Download Hadoop (x86_64)
      uses: fetch
      with:
        uri: https://dlcdn.apache.org/hadoop/common/hadoop-${{vars.hadoop-version}}/hadoop-${{vars.hadoop-version}}.tar.gz
        expected-sha512: de3eaca2e0517e4b569a88b63c89fae19cb8ac6c01ff990f1ff8f0cc0f3128c8e8a23db01577ca562a0e0bb1b4a3889f8c74384e609cd55e537aada3dcaa9f8a
    - if: ${{build.arch}} == 'aarch64'
      name: Download Hadoop (aarch64)
      uses: fetch
      with:
        uri: https://dlcdn.apache.org/hadoop/common/hadoop-${{vars.hadoop-version}}/hadoop-${{vars.hadoop-version}}-aarch64.tar.gz
        expected-sha512: b0a485c5ae0d97b08285bb83a3dd78b834153b2bd53f96ac301852862ccaff139f2c547aee808d5ad4afdc3a204b1c3b6ba459ea83ebf2779e9c129f37c69059
    - name: Prepare Hadoop standalone
      runs: |
        mkdir ${{vars.hadoop-home}} && tar -zxf hadoop-${{vars.hadoop-version}}.tar.gz --strip-components=1 -C ${{vars.hadoop-home}}
        rm *.tar.gz*
        echo "127.0.0.1 $(hostname)" >> /etc/hosts
    - name: Prepare HDFS directories
      runs: |
        echo "test:x:$(id -u):$(id -g):test user:/:/bin/sh:" >> /etc/passwd
        ${{vars.hadoop-home}}/bin/hadoop fs -mkdir -p /tmp
        ${{vars.hadoop-home}}/bin/hadoop fs -mkdir -p /user/hive/warehouse
        ${{vars.hadoop-home}}/bin/hadoop fs -chmod g+w /tmp
        ${{vars.hadoop-home}}/bin/hadoop fs -chmod g+w /user/hive/warehouse
    - name: Initialize the Hive metastore derby database
      runs: |
        ${{vars.hive-home}}/bin/schematool -dbType derby -initSchema
    # This test starts Beeline and HiveServer2 in the same process.
    # Ref: https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Overview
    - name: Create a table in Hive
      runs: |
        ${{vars.hive-home}}/bin/beeline -u jdbc:hive2:// --silent=true -e 'CREATE TABLE pokes (foo INT, bar STRING)' 2>/dev/null
        ${{vars.hive-home}}/bin/beeline -u jdbc:hive2:// --silent=true -e 'SHOW TABLES' 2>/dev/null | grep -q pokes

update:
  enabled: true
  ignore-regex-patterns:
    - -rc
  github:
    identifier: apache/hive
    use-tag: true
    strip-prefix: rel/release-
    tag-filter: rel/release-
