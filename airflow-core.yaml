package:
  name: airflow-core
  version: 2.10.4
  epoch: 0
  description: Minimal Airflow core - Platform to programmatically author, schedule, and monitor workflows
  dependencies:
    runtime:
      - bash
      - busybox
      - coreutils
      - curl
      - cyrus-sasl
      - cyrus-sasl-dev
      - findutils
      - glibc-locale-en
      - glibc-locales
      - gnupg-utils
      - gzip
      - mariadb-dev
      - mysql
      - openssl
      - postgresql-client
      - postgresql-dev
      - python-3.12
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - gcc
      - glibc-dev
      - mariadb-connector-c-dev
      - mariadb-dev
      - openssf-compiler-options
      - pkgconf-dev
      - postgresql-dev
      - py3.12-build-bin
      - py3.12-pip
      - python-3.12
      - python-3.12-dev
      - wolfi-base
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/apache/airflow
      tag: ${{package.version}}
      expected-commit: c083e456fa02c6cb32cdbe0c9ed3c3b2380beccd

  - runs: |
      # by default airflow celery provider is not built,but running the upstream helm chart requires it
       python patch.py
       # remove the patcher
       rm -rf patch.py

  - runs: |
      # Set required build environment variables
      export SOURCE_DATE_EPOCH=315532800
      export MYSQLCLIENT_CFLAGS=$(mysql_config --cflags)

      # Install airflow core, the upstream sets this as directory
      export PYTHONUSERBASE=${{targets.destdir}}/home/airflow/.local
      pip3.12 install --no-cache-dir --user apache-airflow[core]==${{package.version}}

      pip3.12 install --no-cache-dir --user aiohttp>=3.10.11 tornado>=6.4.2

      pip3.12 install --no-cache-dir --user --force-reinstall packaging statsd

  - runs: |
      # Cleanup unnecessary dependencies
      pip3.12 uninstall --yes setuptools
      find . -name '__pycache__' -exec rm -rf {} +

  - runs: |
      mkdir -p ${{targets.destdir}}/opt/airflow/dags
      mkdir -p ${{targets.destdir}}/opt/airflow/logs
      mkdir -p ${{targets.destdir}}/scripts/docker

      # The first time you run Airflow, it will create a file called `airflow.cfg` in
      # `$AIRFLOW_HOME` directory
      # However, for production case it is advised to generate the configuration
      export PYTHONPATH=${{targets.destdir}}/home/airflow/.local/lib/python3.12/site-packages

      ${{targets.destdir}}/home/airflow/.local/bin/airflow config list --defaults > ${{targets.destdir}}/opt/airflow/"airflow.cfg"

      cp airflow/config_templates/default_webserver_config.py ${{targets.destdir}}/

      cp scripts/docker/entrypoint_prod.sh ${{targets.destdir}}/entrypoint
      chmod 755 ${{targets.destdir}}/entrypoint

      cp scripts/docker/clean-logs.sh ${{targets.destdir}}/clean-logs
      chmod 755 ${{targets.destdir}}/clean-logs

      cp scripts/docker/airflow-scheduler-autorestart.sh ${{targets.destdir}}/airflow-scheduler-autorestart
      chmod 755 ${{targets.destdir}}/airflow-scheduler-autorestart

      # unlike airflow, airflow-core needs only these scripts
      cp scripts/docker/common.sh ${{targets.destdir}}/scripts/docker
      cp scripts/docker/install_mssql.sh ${{targets.destdir}}/scripts/docker
      cp scripts/docker/install_mysql.sh ${{targets.destdir}}/scripts/docker
      cp scripts/docker/install_os_dependencies.sh ${{targets.destdir}}/scripts/docker
      cp scripts/docker/install_postgres.sh ${{targets.destdir}}/scripts/docker
      chmod 755 ${{targets.destdir}}/scripts/docker/*

subpackages:
  - name: airflow-compat
    dependencies:
      runtime:
        - ${{package.name}}
    pipeline:
      - runs: |
          # Symlink libstdc++ from usr/lib to /usr/lib/$(uname -m)-linux-gnu/
          mkdir -p ${{targets.subpkgdir}}/usr/lib/$(uname -m)-linux-gnu
          ln -sf /usr/lib/libstdc++.so.6 ${{targets.subpkgdir}}/usr/lib/$(uname -m)-linux-gnu/

update:
  enabled: true
  ignore-regex-patterns:
    - 'rc\d+$'
    - 'helm-chart*'
  github:
    identifier: apache/airflow

test:
  environment:
    contents:
      packages:
        - python3
  pipeline:
    - runs: |
        export PATH=/root/bin:/home/airflow/.local/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        export PYTHONPATH=/home/airflow/.local/lib/python3.12/site-packages
        airflow version
        python3.12 -c "import airflow"
