package:
  name: nginx
  version: 1.23.3
  epoch: 2
  description: HTTP and reverse proxy server (stable version)
  target-architecture:
    - all
  copyright:
    - paths:
        - "*"
      attestation: TODO
      license: BSD-2-Clause

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - build-base
      - automake
      - autoconf
      - brotli-dev
      - gd-dev
      - geoip-dev
      - libmaxminddb-dev
      - libxml2-dev
      - libxslt-dev
      - openssl-dev
      - pcre-dev
      - perl-dev
      - pkgconf
      - zeromq-dev
      - zlib-dev
      - luajit-dev
data:
  - name: modules
    items:
      http_geoip: "10"
      http_image_filter: "10"
      http_perl: "10"
      http_xslt_filter: "10"
      mail: "10"
      stream_geoip: "10"
      stream: "10"
# TODO look at adding extra modules like alpine does https://git.alpinelinux.org/aports/tree/main/nginx/APKBUILD#n149
pipeline:
  - uses: fetch
    with:
      expected-sha256: 75cb5787dbb9fae18b14810f91cc4343f64ce4c24e27302136fb52498042ba54
      uri: https://nginx.org/download/nginx-${{package.version}}.tar.gz

  - name: configure
    runs: |
      export LUAJIT_LIB="$(pkgconf --variable=libdir luajit)"
      export LUAJIT_INC="$(pkgconf --variable=includedir luajit)"

      ./configure \
          --prefix=/var/lib/nginx \
          --sbin-path=/usr/sbin/nginx \
          --modules-path=/$_modules_dir \
          --conf-path=/etc/nginx/nginx.conf \
          --pid-path=/run/nginx/nginx.pid \
          --lock-path=/run/nginx/nginx.lock \
          --http-client-body-temp-path=/var/lib/nginx/tmp/client_body \
          --http-proxy-temp-path=/var/lib/nginx/tmp/proxy \
          --http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi \
          --http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi \
          --http-scgi-temp-path=/var/lib/nginx/tmp/scgi \
          --with-perl_modules_path=/usr/lib/perl5/vendor_perl \
          \
          --user=nginx \
          --group=nginx \
          --with-threads \
          --with-file-aio \
          \
          --without-pcre2 \
          \
          --with-http_ssl_module \
          --with-http_v2_module \
          --with-http_realip_module \
          --with-http_addition_module \
          --with-http_xslt_module=dynamic \
          --with-http_image_filter_module=dynamic \
          --with-http_geoip_module=dynamic \
          --with-http_sub_module \
          --with-http_dav_module \
          --with-http_flv_module \
          --with-http_mp4_module \
          --with-http_gunzip_module \
          --with-http_gzip_static_module \
          --with-http_auth_request_module \
          --with-http_random_index_module \
          --with-http_secure_link_module \
          --with-http_degradation_module \
          --with-http_slice_module \
          --with-http_stub_status_module \
          --with-http_perl_module=dynamic \
          --with-mail=dynamic \
          --with-mail_ssl_module \
          --with-stream=dynamic \
          --with-stream_ssl_module \
          --with-stream_realip_module \
          --with-stream_geoip_module=dynamic \
          --with-stream_ssl_preread_module

  - runs: |
      make DESTDIR=${{targets.destdir}} install

      # default error logs to standard error
      echo 'error_log  stderr  notice;' >> ${{targets.destdir}}/etc/nginx/nginx.conf

  - uses: strip
subpackages:
    - range: modules
      name: nginx-mod-${{range.key}}
      description: Nginx third-party module ${{range.key}}
      pipeline:
        - runs: |
            mkdir -p ${{targets.subpkgdir}}/usr/lib/nginx/modules
            mkdir -p ${{targets.subpkgdir}}/etc/nginx/modules

            mv ${{targets.destdir}}/ngx_${{range.key}}_module.so ${{targets.subpkgdir}}/usr/lib/nginx/modules/

            # TODO may need to rework the prefix here if we add other module subpackages like alpine does https://git.alpinelinux.org/aports/tree/main/nginx/APKBUILD#n417
            echo "load_module \"modules/ngx_${{range.key}}_module.so\";" >> ${{targets.subpkgdir}}/etc/nginx/modules/${{range.value}}_${{range.key}}.conf
            
            case ${{range.key}} in
              http_perl)
                mv ${{targets.destdir}}/usr/lib/perl5 ${{targets.subpkgdir}}/usr/lib/
              ;;
              http_naxsi)
                install -m644 -D naxsi-*/naxsi_config/naxsi_core.rules \
                  ${{targets.subpkgdir}}/etc/nginx/naxsi_core.rules
              ;;
              stream)
                mkdir -p ${{targets.subpkgdir}}/etc/nginx/stream.d
                install -m644 -D stream.conf ${{targets.subpkgdir}}/etc/nginx/stream.d/
              ;;
            esac
