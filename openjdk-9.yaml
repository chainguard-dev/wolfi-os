package:
  name: openjdk-9
  version: 9.0.4
  epoch: 4
  description: "Oracle OpenJDK 9"
  copyright:
    - license: GPL-2.0-with-classpath-exception
  dependencies:
    runtime:
      - openjdk-9-jre
      - java-cacerts

environment:
  contents:
    packages:
      - wolfi-base
      - build-base
      - ca-certificates
      - bash
      - zip
      - file
      - gawk
      - linux-headers
      - coreutils
      - freetype-dev
      - cups-dev
      - libx11-dev
      - libxext-dev
      - libxrender-dev
      - libxrandr-dev
      - libxtst-dev
      - libxt-dev
      - alsa-lib-dev
      - libffi-dev
      - fontconfig-dev
      - libjpeg-turbo-dev
      - giflib-dev
      - lcms2-dev
      - libpng-dev
      - zlib-dev
      - openjdk-8
      - openjdk-8-default-jvm

pipeline:
  - uses: fetch
    with:
      uri: https://download.java.net/openjdk/jdk9/ri/openjdk-9_src.zip
      expected-sha512: 1932e416d7f3164aed6d3590a4d42afdffb35cca6aeeec7146b1cdcbb3ac18e42122cd363b2fb44717ff562842ae1c6ab5645fb3e2a2fa236e753b5379ba7876
      extract: false

  - runs: |
      unzip openjdk-9_src.zip
      cd openjdk
      mv * ..

  - uses: patch
    with:
      patches: JDK-8187578.patch JDK-8241296.patch JDK-8224851.patch JDK-8245051.patch gcc10-compilation-fix.patch gcc11.patch int-conversion.patch make-4.3.patch

  - runs: |
      CFLAGS='' CXXFLAGS='' LDFLAGS='' \
        bash ./configure \
        --build=${{host.triplet.gnu}} \
        --host=${{host.triplet.gnu}} \
        --prefix=/usr/lib/jvm/java-1.9-openjdk \
        --sysconfdir=/etc \
        --mandir=/usr/share/man \
        --infodir=/usr/share/info \
        --localstatedir=/var \
        --with-jobs=$(nproc) \
        --with-test-jobs=$(nproc) \
        --disable-precompiled-headers \
        --with-zlib=system \
        --with-libjpeg=system \
        --with-giflib=system \
        --with-libpng=system \
        --with-lcms=system \
        --with-jtreg=no \
        --with-native-debug-symbols=none \
        --disable-warnings-as-errors \
        --enable-dtrace=no \
        --with-jvm-variants=server \
        --with-debug-level=release \
        --with-version-pre= \
        --with-version-opt="wolfi-r${{package.epoch}}" \
        --with-version-build="${{package.version}}" \
        --with-extra-cflags="-fno-lifetime-dse -fno-strict-overflow -fno-delete-null-pointer-checks -fno-strict-aliasing" \
        --with-extra-cxxflags="-fno-lifetime-dse -fno-strict-overflow -fno-delete-null-pointer-checks -fno-strict-aliasing" \
        --with-extra-ldflags="$LDFLAGS"

      make images

  # Check we built something valid
  - runs: |
      _java_bin="./build/*-normal-server-release/images/jdk/bin"

      $_java_bin/javac -d . HelloWorld.java
      $_java_bin/java HelloWorld

      # NOTE: Disable flakey tests for now as we're seeing builds hang on aarch64
      # # run the gtest unittest suites
      # make test-hotspot-gtest

  - runs: |
      _java_home="usr/lib/jvm/java-1.9-openjdk"

      mkdir -p "${{targets.contextdir}}"/$_java_home
      cp -r build/*-normal-server-release/images/jdk/* "${{targets.contextdir}}"/$_java_home
      rm "${{targets.contextdir}}"/$_java_home/lib/src.zip

  - uses: strip

subpackages:
  - name: "openjdk-9-jre"
    description: "OpenJDK 9 Java Runtime Environment"
    dependencies:
      runtime:
        - openjdk-9-jre-base
    pipeline:
      - runs: |
          _java_home="usr/lib/jvm/java-1.9-openjdk"

          mkdir -p "${{targets.contextdir}}"/$_java_home/lib
          mv "${{targets.contextdir}}"/$_java_home/lib/libawt_xawt.so \
              "${{targets.contextdir}}"/$_java_home/lib/libfontmanager.so \
              "${{targets.contextdir}}"/$_java_home/lib/libjavajpeg.so \
              "${{targets.contextdir}}"/$_java_home/lib/libjsoundalsa.so \
              "${{targets.contextdir}}"/$_java_home/lib/liblcms.so \
              "${{targets.contextdir}}"/$_java_home/lib/libsplashscreen.so \
              "${{targets.contextdir}}"/$_java_home/lib

  - name: "openjdk-9-jre-base"
    description: "OpenJDK 9 Java Runtime Environment (headless)"
    dependencies:
      runtime:
        - java-common
        - java-cacerts
    pipeline:
      - runs: |
          _java_home="usr/lib/jvm/java-1.9-openjdk"

          mkdir -p "${{targets.contextdir}}"/$_java_home
          mv "${{targets.contextdir}}"/$_java_home/lib \
             "${{targets.contextdir}}"/$_java_home

          mkdir -p "${{targets.contextdir}}"/$_java_home/bin
          for i in appletviewer \
                    idlj \
                    java \
                    jjs \
                    jrunscript \
                    keytool \
                    orbd \
                    pack200 \
                    rmid \
                    rmiregistry \
                    servertool \
                    tnameserv \
                    unpack200; do
            mv "${{targets.contextdir}}"/$_java_home/bin/$i "${{targets.contextdir}}"/$_java_home/bin/$i
          done

          mv "${{targets.contextdir}}"/$_java_home/legal "${{targets.contextdir}}"/$_java_home
          mv "${{targets.contextdir}}"/$_java_home/conf "${{targets.contextdir}}"/$_java_home
          mv "${{targets.contextdir}}"/$_java_home/release "${{targets.contextdir}}"/$_java_home
          cp ASSEMBLY_EXCEPTION \
              LICENSE \
              README \
             "${{targets.contextdir}}"/$_java_home

          # symlink to shared java cacerts store
          rm -f "${{targets.contextdir}}"/$_java_home/lib/security/cacerts
          ln -sf /etc/ssl/certs/java/cacerts \
            "${{targets.contextdir}}"/$_java_home/lib/security/cacerts

  - name: "openjdk-9-jmods"
    description: "OpenJDK 9 jmods"
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/lib/jvm/java-1.9-openjdk
          mv "${{targets.contextdir}}"/usr/lib/jvm/java-1.9-openjdk/jmods \
             "${{targets.contextdir}}"/usr/lib/jvm/java-1.9-openjdk

  - name: "openjdk-9-doc"
    description: "OpenJDK 9 Documentation"
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/lib/jvm/java-1.9-openjdk
          mv "${{targets.contextdir}}"/usr/lib/jvm/java-1.9-openjdk/man \
             "${{targets.contextdir}}"/usr/lib/jvm/java-1.9-openjdk

  - name: "openjdk-9-demos"
    description: "OpenJDK 9 Demos"
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/lib/jvm/java-1.9-openjdk
          mv "${{targets.contextdir}}"/usr/lib/jvm/java-1.9-openjdk/demo \
             "${{targets.contextdir}}"/usr/lib/jvm/java-1.9-openjdk

  - name: "openjdk-9-default-jvm"
    description: "Use the openjdk-9 JVM as the default JVM"
    dependencies:
      runtime:
        - openjdk-9-jre
      provides:
        - default-jvm=1.9
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/lib/jvm
          ln -sf java-1.9-openjdk "${{targets.contextdir}}"/usr/lib/jvm/default-jvm

  - name: "openjdk-9-default-jdk"
    description: "Use the openjdk-9 JVM as the default JVM with the JDK installed"
    dependencies:
      runtime:
        - openjdk-9-default-jvm
        - openjdk-9
      provides:
        - default-jdk=1.9

update:
  # OpenJDK 9 is EOL.
  enabled: false
