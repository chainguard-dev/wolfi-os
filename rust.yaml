package:
  name: rust
  version: 1.72.1
  epoch: 0
  description: "Empowering everyone to build reliable and efficient software."
  copyright:
    - license: Apache-2.0 AND MIT
  dependencies:
    runtime:
      - libLLVM-16

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - build-base
      - libgit2-dev
      - coreutils
      - curl-dev
      - file
      - libssh2-dev
      - llvm16
      - libLLVM-16
      - llvm16-dev
      - clang-16
      - openssl-dev
      - python3
      - wasi-libc
      - xz-dev
      - zlib-dev
      - patch
      - rust

pipeline:
  - uses: fetch
    with:
      uri: https://static.rust-lang.org/dist/rustc-${{package.version}}-src.tar.xz
      expected-sha256: aea58d962ff1c19521b9f587aad88285f0fd35b6b6738b031a7a15bb1b70a7c3
      extract: false

  - runs: |
      tar -xJf rustc-${{package.version}}-src.tar.xz
      rm rustc-${{package.version}}-src.tar.xz

  - runs: |
      export CFLAGS="$CFLAGS -O2 -I/usr/lib/llvm-16/include"
      export CXXFLAGS="$CXXFLAGS -O2 -I/usr/lib/llvm-16/include"
      export OPENSSL_NO_VENDOR=1
      export RUST_BACKTRACE=1
      export ARCH=${{host.triplet.rust}}
      cd rustc-${{package.version}}-src

      ./configure \
        --host="${ARCH}" \
        --target="${ARCH}" \
        --prefix="/usr" \
        --release-channel="stable" \
        --enable-local-rust \
        --local-rust-root="/usr" \
        --llvm-root="/usr/lib/llvm16" \
        --llvm-config="/usr/lib/llvm16/bin/llvm-config" \
        --disable-docs \
        --enable-extended \
        --tools="cargo,src" \
        --enable-llvm-link-shared \
        --enable-option-checking \
        --enable-locked-deps \
        --enable-profiler \
        --enable-vendor \
        --dist-compression-formats=gz \
        --python="python3" \
        --set="rust.musl-root=/usr" \
        --set="rust.codegen-units=1" \
        --set="rust.codegen-units-std=1" \
        --set="rust.parallel-compiler=false" \
        --set="target.${ARCH}.musl-root=/usr" \
        --set="target.${ARCH}.crt-static=false" \
        --set="target.${ARCH}.musl-root=/usr" \
        --set="target.${ARCH}.crt-static=false"

  - runs: |
      cd rustc-${{package.version}}-src
      sed 's/#deny-warnings = .*/deny-warnings = false/' -i config.toml
      sed 's|deny(warnings,|deny(|' -i src/bootstrap/lib.rs
      mkdir -p "${{targets.destdir}}/usr"
      unset CARGO_PROFILE_RELEASE_LTO
      unset CARGO_PROFILE_RELEASE_OPT_LEVEL
      unset CARGO_PROFILE_RELEASE_PANIC
      unset CARGO_PROFILE_RELEASE_CODEGEN_UNITS
      export CFLAGS="$CFLAGS -O2 -Iusr/include/llvm16"
      export CXXFLAGS="$CXXFLAGS -O2 -I/usr/include/llvm16"
      export OPENSSL_NO_VENDOR=1
      export RUST_BACKTRACE=1
      DESTDIR=${{targets.destdir}} python3 ./x.py install --jobs $(nproc)

  - uses: strip

  # delete uneeded files eg uninstalltion
  - runs: |
      rm ${{targets.destdir}}/usr/lib/rustlib/components
      rm ${{targets.destdir}}/usr/lib/rustlib/install.log
      rm ${{targets.destdir}}/usr/lib/rustlib/rust-installer-version
      rm ${{targets.destdir}}/usr/lib/rustlib/uninstall.sh
      rm ${{targets.destdir}}/usr/lib/rustlib/manifest-*

  # rustbuild always installs copies of the shared libraries to /usr/lib,
  # overwrite them with symlinks to the per-architecture versions
  - runs: |
      mkdir -p ${{targets.destdir}}/usr/lib32
      cd ${{targets.destdir}}
      ln -srft usr/lib   usr/lib/rustlib/x86_64-unknown-linux-gnu/lib/*.so
      ln -srft usr/lib32 usr/lib/rustlib/i686-unknown-linux-gnu/lib/*.so

subpackages:
  - name: cargo
    description: "Rust's package manager"
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/bin
          mv ${{targets.destdir}}/usr/bin/cargo ${{targets.subpkgdir}}/usr/bin/cargo
          mkdir -p ${{targets.subpkgdir}}/usr/libexec
          mv ${{targets.destdir}}/usr/libexec/cargo-credential-1password ${{targets.subpkgdir}}/usr/libexec/cargo-credential-1password
          # Move all the cargo docs 
          mkdir -p ${{targets.subpkgdir}}/usr/share/man/man1
          mv ${{targets.destdir}}/usr/share/man/man1/cargo* ${{targets.subpkgdir}}/usr/share/man/man1

update:
  enabled: true
  github:
    identifier: rust-lang/rust
    use-tag: true
