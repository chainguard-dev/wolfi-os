package:
  name: flyway
  version: 11.1.1
  epoch: 0
  description: "Flyway is a database migration tool to evolve your database schema easily and reliably across all your instances."
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - bash
      - openjdk-17-default-jvm

environment:
  contents:
    packages:
      - build-base
      - bash
      - busybox
      - git
      - maven
      - openjdk-17
      - wolfi-base
  environment:
    LANG: en_US.UTF-8
    JAVA_HOME: /usr/lib/jvm/java-17-openjdk

vars:
  HdrHistogram: "HdrHistogram"
  accessors-smart: "accessors-smart"
  animal-sniffer-annotations: "animal-sniffer-annotations"
  annotations: "annotations"
  api-common: "api-common"
  auto-value-annotations: "auto-value-annotations"
  asm: "asm"
  aws-secretsmanager-jdbc: "aws-secretsmanager-jdbc"
  azure: "azure"
  bson: "bson"
  caffeine: "caffeine"
  cassandra-jdbc-wrapper: "cassandra-jdbc-wrapper"
  checker-qual: "checker-qual"
  commons-codec: "commons-codec"
  commons-collections4: "commons-collections4"
  commons-io: "commons-io"
  commons-lang3: "commons-lang3"
  commons-text: "commons-text"
  config: "config"
  conscrypt-openjdk-uber: "conscrypt-openjdk-uber"
  content-type: "content-type"
  databricks-jdbc: "databricks-jdbc"
  detector-resources-support: "detector-resources-support"
  error_prone_annotations: "error_prone_annotations"
  failureaccess: "failureaccess"
  flyway-experimental-mongodb: "flyway-experimental-mongodb"
  gax: "gax"
  google-auth: "google-auth"
  google-cloud-core: "google-cloud-core"
  google-cloud-monitoring: "google-cloud-monitoring"
  google-cloud-spanner: "google-cloud-spanner"
  google-cloud-storage: "google-cloud-storage"
  google-http-client: "google-http-client"
  grpc: "grpc"
  gson: "gson"
  guava: "guava"
  h2: "h2"
  hsqldb: "hsqldb"
  httpclient: "httpclient"
  httpcore: "httpcore"
  j2objc-annotations: "j2objc-annotations"
  javax.annotation-api: "javax.annotation-api"
  jackson: "jackson"
  jansi: "jansi"
  java-driver: "java-driver"
  jaybird: "jaybird"
  jcip-annotations: "jcip-annotations"
  jffi: "jffi"
  jnr: "jnr"
  jtds: "jtds"
  jna: "jna"
  json-smart: "json-smart"
  jsr305: "jsr305"
  lang-tag: "lang-tag"
  listenablefuture: "listenablefuture"
  mariadb-java-client: "mariadb-java-client"
  metrics-core: "metrics-core"
  mongodb-driver: "mongodb-driver"
  msal4j: "msal4j"
  msal4j-persistence-extension: "msal4j-persistence-extension"
  mssql-jdbc: "mssql-jdbc"
  native-protocol: "native-protocol"
  nimbus-jose-jwt: "nimbus-jose-jwt"
  oauth2-oidc-sdk: "oauth2-oidc-sdk"
  ojdbc8: "ojdbc8"
  opencensus: "opencensus"
  opentelemetry: "opentelemetry"
  oraclepki: "oraclepki"
  osdt-cert: "osdt_cert"
  osdt-core: "osdt_core"
  perfmark-api: "perfmark-api"
  postgresql: "postgresql"
  protobuf-java: "protobuf-java"
  proto: "proto"
  re2j: "re2j"
  reactor: "reactor"
  semver4j: "semver4j"
  singlestore-jdbc-client: "singlestore-jdbc-client"
  slf4j-api: "slf4j-api"
  slf4j-nop: "slf4j-nop"
  snowflake-jdbc: "snowflake-jdbc"
  sqlite-jdbc: "sqlite-jdbc"
  stax2-api: "stax2-api"
  threetenbp: "threetenbp"
  woodstox-core: "woodstox-core"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/flyway/flyway
      tag: flyway-${{package.version}}
      expected-commit: ba8b11c0272c744786e52049b0391710253ea7d2

  - uses: maven/pombump
    with:
      pom: flyway-commandline/pom.xml


  - name: Install
    runs: |
      
      # Setup flyway dirs
      mkdir -p ${{targets.destdir}}/usr/share/java/flyway
      for dir in lib lib/aad lib/netty lib/oracle_wallet lib/flyway conf licenses drivers drivers/cassandra drivers/gcp drivers/mongo; do
        mkdir -p ${{targets.destdir}}/usr/share/java/flyway/$dir
      done

      # Build flyway
      ./mvnw -B clean dependency:copy-dependencies package -e --file pom.xml -DskipTests -pl !flyway-database/flyway-database-mongodb      

      # Move over flyway related cmd scripts, license info, etc.
      cp flyway-commandline/src/main/assembly/flyway ${{targets.contextdir}}/usr/share/java/flyway/
      cp flyway-commandline/src/main/assembly/flyway.cmd ${{targets.contextdir}}/usr/share/java/flyway/
      cp flyway-commandline/src/main/assembly/LICENSE.md ${{targets.contextdir}}/usr/share/java/flyway/licenses
      cp flyway-commandline/src/main/assembly/LICENSES-THIRD-PARTY.txt ${{targets.contextdir}}/usr/share/java/flyway/licenses
      cp flyway-commandline/src/main/assembly/flyway.toml.example ${{targets.contextdir}}/usr/share/java/flyway/conf
      cp flyway-commandline/src/main/assembly/put-your-jdbc-drivers-here.txt ${{targets.contextdir}}/usr/share/java/flyway/drivers
      
      # Move over flyway related jars
      find flyway-commandline/target/dependency -name "flyway-*.jar" \
        ! -name "flyway-experimental-mongodb-${{package.version}}.jar" \
        -exec cp {} ${{targets.contextdir}}/usr/share/java/flyway/lib/flyway \;
      cp flyway-commandline/target/flyway-commandline-${{package.version}}.jar ${{targets.contextdir}}/usr/share/java/flyway/lib/flyway
      rm ${{targets.contextdir}}/usr/share/java/flyway/lib/flyway/flyway-experimental-sqlite-${{package.version}}.jar
      

      # Setup permissions for flyway cli tools
      chmod 0755 ${{targets.destdir}}/usr/share/java/flyway/flyway ${{targets.destdir}}/usr/share/java/flyway/flyway.cmd
  
  - name: Extract netty jars
    runs: |
      # Extract netty related jars to flyway/lib/netty
      find flyway-commandline/target/dependency -name "netty-*.jar" \
        ! -name "netty-nio-client-*.jar" \
        -exec cp {} ${{targets.contextdir}}/usr/share/java/flyway/lib/netty \;
  
  - name: Extract Flyway lib jars
    runs: |
      # Extract third-party related jars to flyway/lib
      set -- \
        ${{vars.accessors-smart}} \
        ${{vars.commons-text}} \
        ${{vars.content-type}} \
        ${{vars.gson}} \
        ${{vars.jackson}} \
        ${{vars.jansi}} \
        ${{vars.jna}} \
        ${{vars.json-smart}} \
        ${{vars.lang-tag}} \
        ${{vars.msal4j-persistence-extension}} \
        ${{vars.nimbus-jose-jwt}} \
        ${{vars.oauth2-oidc-sdk}} \
        ${{vars.slf4j-nop}} \
        ${{vars.stax2-api}} \
        ${{vars.woodstox-core}} \
      
      for dep in "$@"; do
        cp flyway-commandline/target/dependency/$dep-*.jar ${{targets.contextdir}}/usr/share/java/flyway/lib
      done

  - name: Extract Flyway lib aad jars
    runs: |
      # Extract third-party related jars to flyway/lib/aad
      set -- \
        ${{vars.accessors-smart}} \
        ${{vars.azure}} \
        ${{vars.content-type}} \
        ${{vars.json-smart}} \
        ${{vars.lang-tag}} \
        ${{vars.msal4j}} \
        ${{vars.nimbus-jose-jwt}} \
        ${{vars.oauth2-oidc-sdk}} \
        ${{vars.reactor}} \
        ${{vars.slf4j-api}} \
      
      for dep in "$@"; do
        cp flyway-commandline/target/dependency/$dep-*.jar ${{targets.contextdir}}/usr/share/java/flyway/lib/aad
      done
      rm ${{targets.contextdir}}/usr/share/java/flyway/lib/aad/${{vars.msal4j-persistence-extension}}-*.jar

  - name: Extract Flyway lib oracle-wallet jars
    runs: |
      # Extract third-party related jars to flyway/lib/oracle_wallet
      set -- \
        ${{vars.oraclepki}} \
        ${{vars.osdt-cert}} \
        ${{vars.osdt-core}} \
      
      for dep in "$@"; do
        cp flyway-commandline/target/dependency/$dep-*.jar ${{targets.contextdir}}/usr/share/java/flyway/lib/oracle_wallet
      done
  
  - name: Extract Flyway driver related jars
    runs: |
      # Extract third-party related jars to flyway/drivers
      set -- \
        ${{vars.aws-secretsmanager-jdbc}} \
        ${{vars.databricks-jdbc}} \
        ${{vars.google-cloud-storage}} \
        ${{vars.h2}} \
        ${{vars.hsqldb}} \
        ${{vars.jaybird}} \
        ${{vars.jffi}} \
        ${{vars.jtds}} \
        ${{vars.mariadb-java-client}} \
        ${{vars.mssql-jdbc}} \
        ${{vars.ojdbc8}} \
        ${{vars.postgresql}} \
        ${{vars.singlestore-jdbc-client}} \
        ${{vars.snowflake-jdbc}} \
        ${{vars.sqlite-jdbc}}\
      
      for dep in "$@"; do
        cp flyway-commandline/target/dependency/$dep-*.jar ${{targets.contextdir}}/usr/share/java/flyway/drivers
      done

  - name: Extract Cassandra driver related jars
    runs: |
      # Extract third-party related jars to flyway/drivers/cassandra
      set -- \
        ${{vars.HdrHistogram}} \
        ${{vars.asm}} \
        ${{vars.caffeine}} \
        ${{vars.cassandra-jdbc-wrapper}} \
        ${{vars.commons-collections4}} \
        ${{vars.commons-io}} \
        ${{vars.commons-lang3}} \
        ${{vars.config}} \
        ${{vars.java-driver}} \
        ${{vars.jcip-annotations}} \
        ${{vars.jnr}} \
        ${{vars.metrics-core}} \
        ${{vars.native-protocol}} \
        ${{vars.semver4j}} \
      
      for dep in "$@"; do
        cp flyway-commandline/target/dependency/$dep-*.jar ${{targets.contextdir}}/usr/share/java/flyway/drivers/cassandra
      done

  - name: Extract Mongo driver related jars
    runs: |
      # Extract third-party related jars to flyway/drivers/mongo
      set -- \
        ${{vars.bson}} \
        ${{vars.flyway-experimental-mongodb}} \
        ${{vars.mongodb-driver}} \
      
      for dep in "$@"; do
        cp flyway-commandline/target/dependency/$dep-*.jar ${{targets.contextdir}}/usr/share/java/flyway/drivers/mongo
      done
    
  - name: Extract GCP driver related jars
    runs: |
      # Extract third-party related jars to flyway/drivers/gcp
      set -- \
        ${{vars.animal-sniffer-annotations}} \
        ${{vars.annotations}} \
        ${{vars.api-common}} \
        ${{vars.auto-value-annotations}} \
        ${{vars.checker-qual}} \
        ${{vars.commons-codec}} \
        ${{vars.conscrypt-openjdk-uber}} \
        ${{vars.detector-resources-support}} \
        ${{vars.error_prone_annotations}} \
        ${{vars.failureaccess}} \
        ${{vars.gax}} \
        ${{vars.google-auth}} \
        ${{vars.google-cloud-core}} \
        ${{vars.google-cloud-monitoring}} \
        ${{vars.google-cloud-spanner}} \
        ${{vars.google-cloud-storage}} \
        ${{vars.google-http-client}} \
        ${{vars.grpc}} \
        ${{vars.guava}} \
        ${{vars.httpclient}} \
        ${{vars.httpcore}} \
        ${{vars.j2objc-annotations}} \
        ${{vars.javax.annotation-api}} \
        ${{vars.jsr305}} \
        ${{vars.listenablefuture}} \
        ${{vars.opencensus}} \
        ${{vars.opentelemetry}} \
        ${{vars.perfmark-api}} \
        ${{vars.protobuf-java}} \
        ${{vars.proto}} \
        ${{vars.re2j}} \
        ${{vars.threetenbp}} \

      for dep in "$@"; do
        cp flyway-commandline/target/dependency/$dep-*.jar ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp
      done
      # Clean up some of the unneeded jars
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/annotations-2.25.26.jar
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/google-cloud-core-http-*.jar
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/google-cloud-storage-*.jar
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/google-http-client-appengine-*.jar
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/google-http-client-apache-*.jar
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/google-http-client-jackson2-*.jar
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/grpc-google-cloud-storage-*.jar
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/grpc-opentelemetry-*.jar
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/opencensus-proto-*.jar
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/opentelemetry-gcp-resources-*.jar
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/opentelemetry-sdk-extension-autoconfigure-spi-*.jar
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/opentelemetry-semconv-*.jar
      rm ${{targets.contextdir}}/usr/share/java/flyway/drivers/gcp/proto-google-cloud-storage-*.jar

  - uses: strip

update:
  enabled: true
  github:
    identifier: flyway/flyway
    strip-prefix: flyway-

test:
  environment:
    environment:
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk
  pipeline:
    - name: Test CLI basics
      runs: |
        export PATH=$PATH:/usr/share/java/flyway
        flyway -h
        flyway --version
        flyway list-engines