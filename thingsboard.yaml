package:
  name: thingsboard
  version: 3.7
  epoch: 0
  description: "Open-source IoT Platform - Device management, data collection, processing and visualization."
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - dpkg # dpkg requires gnutar and xz
      - gnutar
      - jq
      - maven
      - nodejs-16
      - openjdk-17
      - openjdk-17-default-jvm
      - xz
      - yarn

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 3528715d2bd5249093ab971bded1fb8b3167210a
      repository: https://github.com/thingsboard/thingsboard.git
      tag: v${{package.version}}

  - runs: |
      mvn clean install -DskipTests -Dlicense.skip=true

subpackages:
  - name: "${{package.name}}-tb-js-executor"
    description: "test"
    dependencies:
      runtime:
        - nodejs-16
    pipeline:
      - name: Create directories
        runs: |
          mkdir -p "${{targets.subpkgdir}}/usr/share/tb-js-executor"
          mkdir -p "${{targets.subpkgdir}}/usr/bin"
      - name: Move tb-js-executor to target directories
        runs: |
          cd msa/js-executor
          cp -r target/src/* "${{targets.subpkgdir}}/usr/share/tb-js-executor"
          cp -r target/package/linux/conf "${{targets.subpkgdir}}/usr/share/tb-js-executor"
          cp -r target/package/linux/conf/* "${{targets.subpkgdir}}/usr/share/tb-js-executor/config"
      - name: Modify entrypoint script
        runs: |
          cp msa/js-executor/docker/start-js-executor.sh "${{targets.subpkgdir}}/usr/bin/start-js-executor.sh"
          chmod +x "${{targets.subpkgdir}}/usr/bin/start-js-executor.sh"
          project_name="ThingsBoard JavaScript Executor Microservice"
          pkg_name="tb-js-executor"
          install_folder="/usr/share/tb-js-executor"
          sed -i "s|\${project.name}|$project_name|g" "${{targets.subpkgdir}}/usr/bin/start-js-executor.sh"
          sed -i "s|\${pkg.name}|$pkg_name|g" "${{targets.subpkgdir}}/usr/bin/start-js-executor.sh"
          sed -i "s|\${pkg.installFolder}|$install_folder|g" "${{targets.subpkgdir}}/usr/bin/start-js-executor.sh"
      - name: Patch CVEs
        runs: |
          cd "${{targets.subpkgdir}}/usr/share/tb-js-executor"
          resolutions='{
            "@grpc/grpc-js": "^1.10.9",
            "debug": "^4.3.1",
            "fast-xml-parser": "^4.4.1",
            "json5": "^2.2.2",
            "moment": "^2.29.4",
            "tough-cookie": "^4.1.3",
            "xml2js": "^0.5.0"
          }'
          jq --argjson resolutions "$resolutions" '.resolutions += $resolutions' package.json > temp.json && mv temp.json package.json
          jq '.dependencies.express = "^4.19.2"' package.json > temp.json && mv temp.json package.json
      - name: Install nodejs dependencies
        runs: |
          cd "${{targets.subpkgdir}}/usr/share/tb-js-executor"
          yarn install --production --non-interactive --network-concurrency 4 --network-timeout 100000 --mutex network && yarn cache clean --all
    test:
      pipeline:
        - name: Test tb-js-executor logs
          uses: test/daemon-check-output
          with:
            start: "/usr/bin/start-js-executor.sh"
            timeout: 30
            expected_output: |
              Starting ThingsBoard JavaScript Executor Microservice

  - name: "${{package.name}}-tb-mqtt-transport"
    description: Thingsboard's transport layer
    dependencies:
      provides:
        - ${{package.name}}-tb-mqtt-transport=${{package.full-version}}
    pipeline:
      - runs: |
          mvn clean install -DskipTests -Dlicense.skip=true
          cd transport/mqtt/target
          dpkg-deb -x *.deb ${{targets.subpkgdir}}
    test:
      pipeline:
        - runs: |
            echo "TODO: Test tb-mqtt-transport"
            exit 1

  - name: "${{package.name}}-tb-node"
    description: ""
    pipeline:
      - runs: |
          echo "TODO: Build and install tb-node"
    test:
      pipeline:
        - runs: |
            echo "TODO: Test tb-node"

  - name: "${{package.name}}-tb-web-ui"
    description: ""
    pipeline:
      - runs: |
          echo "TODO: Build and install tb-web-ui"
    test:
      pipeline:
        - runs: |
            echo "TODO: Test tb-web-ui"

update:
  enabled: true
  github:
    identifier: thingsboard/thingsboard
    tag-filter: v
    strip-prefix: v
