package:
  name: php-8.1-memcached
  version: 3.3.0
  epoch: 2
  description: "A PHP extension for Memcached"
  copyright:
    - license: PHP-3.01
  dependencies:
    runtime:
      - ${{package.name}}-config
      - php-${{vars.phpMM}}

var-transforms:
  - from: ${{package.name}}
    match: ^php-(\d+\.\d+)-.*$
    replace: "$1"
    to: phpMM

environment:
  contents:
    packages:
      - autoconf
      - build-base
      - busybox
      - libmemcached-dev
      - php-${{vars.phpMM}}
      - php-${{vars.phpMM}}-dev
      - php-${{vars.phpMM}}-igbinary-dev
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/php-memcached-dev/php-memcached
      tag: v${{package.version}}
      expected-commit: b0b82692d789a2a5fd95b3910e87f73615c0f918

  - name: Prepare build
    runs: phpize

  - name: Configure
    runs: ./configure

  - uses: autoconf/make

  - name: Make install
    runs: |
      INSTALL_ROOT="${{targets.destdir}}" DESTDIR="${{targets.destdir}}" make install

subpackages:
  - name: ${{package.name}}-config
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}/etc/php/conf.d"
          echo "extension=memcached.so" > "${{targets.subpkgdir}}/etc/php/conf.d/memcached.ini"

  - name: ${{package.name}}-dev
    description: PHP ${{vars.phpMM}} memcached development headers
    pipeline:
      - uses: split/dev

update:
  enabled: true
  github:
    identifier: php-memcached-dev/php-memcached
    strip-prefix: v
    tag-filter: v

test:
  environment:
    contents:
      packages:
        - memcached
        - procps
    accounts:
      groups:
        - groupname: nonroot
          gid: 65532
      users:
        - username: nonroot
          gid: 65532
          uid: 65532
      run-as: 65532
  pipeline:
    - name: "Start memcached server"
      runs: |
        memcached -d -p 11211
        sleep 2
        pgrep memcached
    - name: "Verify extension is loaded"
      runs: |
        php -m | grep -i memcached
    - name: "Check extension configuration"
      runs: |
        php --ri memcached
    - name: "Test basic connection"
      runs: |
        php -r '
          $m = new Memcached();
          $m->addServer("127.0.0.1", 11211);
          echo $m->getServerList()[0]["host"];
        ' | grep "127.0.0.1"
    - name: "Test basic set/get operations"
      runs: |
        php -r '
          $m = new Memcached();
          $m->addServer("127.0.0.1", 11211);
          $m->set("test_key", "test_value");
          echo $m->get("test_key");
        ' | grep "test_value"
    - name: "Test numeric values"
      runs: |
        php -r '
          $m = new Memcached();
          $m->addServer("127.0.0.1", 11211);
          $m->set("number", 12345);
          echo $m->get("number");
        ' | grep "12345"
    - name: "Test array serialization"
      runs: |
        php -r '
          $m = new Memcached();
          $m->addServer("127.0.0.1", 11211);
          $m->set("array", ["a" => 1, "b" => 2]);
          $result = $m->get("array");
          echo $result["b"];
        ' | grep "2"
    - name: "Test delete operation"
      runs: |
        php -r '
          $m = new Memcached();
          $m->addServer("127.0.0.1", 11211);
          $m->set("delete_me", "value");
          $m->delete("delete_me");
          var_dump($m->get("delete_me") === false);
        ' | grep "bool(true)"
    - name: "Test multi-get operation"
      runs: |
        php -r '
          $m = new Memcached();
          $m->addServer("127.0.0.1", 11211);
          $m->setMulti(["key1" => "val1", "key2" => "val2"]);
          $result = $m->getMulti(["key1", "key2"]);
          echo count($result);
        ' | grep "2"
    - name: "Test igbinary serializer"
      runs: |
        php -r '
          $m = new Memcached();
          $m->addServer("127.0.0.1", 11211);
          $m->setOption(Memcached::OPT_SERIALIZER, Memcached::SERIALIZER_IGBINARY);
          $m->set("igbinary_test", ["complex" => "data"]);
          $result = $m->get("igbinary_test");
          echo $result["complex"];
        ' | grep "data"
