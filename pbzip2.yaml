package:
  name: pbzip2
  version: 1.1.13
  epoch: 0
  description: Parallel implementation of the bzip2 block-sorting file compressor
  copyright:
    - license: BSD

environment:
  contents:
    packages:
      - build-base
      - busybox
      - bzip2-dev
      - ca-certificates-bundle

pipeline:
  - uses: fetch
    with:
      expected-sha256: 8fd13eaaa266f7ee91f85c1ea97c86d9c9cc985969db9059cdebcb1e1b7bdbe6
      uri: https://launchpad.net/pbzip2/1.1/${{package.version}}/+download/pbzip2-${{package.version}}.tar.gz

  - runs: |
      # Delete {CXX,LD}FLAGS from Makefile. Use one from Wolfi build env
      sed -i '/^\(CXX\|LD\)FLAGS =/d' Makefile

  - uses: autoconf/make

  - uses: autoconf/make-install

  - uses: strip

update:
  enabled: false
  exclude-reason: Need support for git.launchpad.net

test:
  pipeline:
    - name: version test
      runs: |
        pbzip2 --version
    - name: basic compress/decompress test
      runs: |
        echo "Hello from pbzip2!" > test.txt
        # Compress with pbzip2
        pbzip2 test.txt
        # Decompress
        pbzip2 -d test.txt.bz2
        # Verify the result
        if ! grep -q "Hello from pbzip2!" test.txt; then
          echo "ERROR: Decompressed file does not contain the expected text."
          exit 1
        fi
    - name: parallel compression example
      runs: |
        # Create a sample file of some size
        dd if=/dev/urandom of=random.dat bs=1K count=50

        # Compress using 4 threads
        pbzip2 -p4 random.dat

        # We should now have random.dat.bz2
        if [ ! -f random.dat.bz2 ]; then
          echo "ERROR: Parallel compression failed; random.dat.bz2 not found."
          exit 1
        fi

        # Decompress
        pbzip2 -d random.dat.bz2

        # Make sure the file came back
        if [ ! -f random.dat ]; then
          echo "ERROR: Decompression failed; random.dat not restored."
          exit 1
        fi
        echo "Parallel compression test passed."
    - name: cross-compatibility test with bzip2
      runs: |
        echo "Cross-compatibility test" > cross.txt

        # Compress with pbzip2
        pbzip2 cross.txt
        # Decompress with standard bzip2
        bzip2 -d cross.txt.bz2

        # Check the content
        if ! grep -q "Cross-compatibility test" cross.txt; then
          echo "ERROR: Cross-compatibility test failed."
          exit 1
        fi
        echo "Cross-compatibility test passed."
