package:
  name: kserve-modelmesh-serving
  version: 0.12.0
  epoch: 0
  description: ModelMesh Serving is the Controller for managing ModelMesh, a general-purpose model serving management/routing layer.
  copyright:
    - license: Apache-2.0

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/kserve/modelmesh-serving.git
      tag: v${{package.version}}
      expected-commit: d0e56fa4ac7547e644c87d63dc97a14f612c0391

  - uses: go/build
    with:
      packages: .
      output: modelmesh-manager

test:
  environment:
    contents:
      packages:
        - kustomize
        - make
        - go
        - curl
        - openssl
        - jq
  pipeline:
    - uses: test/kwok/cluster
    - name: Wait for nodes
      runs: kubectl wait --for=condition=Ready nodes --all
    - uses: git-checkout
      with:
        repository: https://github.com/kserve/modelmesh-serving.git
        tag: v${{package.version}}
        expected-commit: d0e56fa4ac7547e644c87d63dc97a14f612c0391
    - name: Create openssl mount parent
      # This seems somewhat silly do to, but the pod uses this to mount mTLS certs.
      runs: mkdir /etc/ssl/openssl.cnf
    - name: Install CRDs
      #   environment:
      #     CONTROLLER_GEN_VERSION: v0.11.4
      #   #runs: make install
      runs: |
        kubectl create ns modelmesh-serving
        ./scripts/install.sh --namespace modelmesh-serving --fvt || exit 0
    - name: Set default config
      runs: |
        kubectl apply -f - <<EOF
        ---
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: model-serving-config
          namespace: modelmesh-serving
        data:
          config.yaml: |
            modelMeshResources: 
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 1000m
                memory: 1Gi
        EOF
    - name: Mock Kubernetes mounts
      runs: |
        certdir="/tmp/k8s-webhook-server/serving-certs"
        mkdir -p "${certdir}"
        kubectl get secrets modelmesh-webhook-server-cert -o jsonpath='{.data.tls\.crt}' | base64 -d > ${certdir}/tls.crt
        kubectl get secrets modelmesh-webhook-server-cert -o jsonpath='{.data.tls\.key}' | base64 -d > ${certdir}/tls.key
    - name: Verify configmap
      runs: |
        kubectl get configmap -n modelmesh-serving model-serving-config -o yaml
    - name: Verify installation
      runs: |
        # This works
        go build -trimpath -o bin/manager main.go
        ./bin/manager &

        # This does not work
        # modelmesh-manager &

        sleep 5
        curl -s localhost:8080/metrics

update:
  enabled: true
  github:
    identifier: kserve/modelmesh-serving
    strip-prefix: v
