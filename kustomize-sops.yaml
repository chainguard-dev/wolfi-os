package:
  name: kustomize-sops
  version: 4.3.3
  epoch: 0
  description: A Flexible Kustomize Plugin for SOPS Encrypted Resources
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - git
      - ca-certificates-bundle
      - kustomize

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/viaduct-ai/kustomize-sops
      tag: v${{package.version}}
      expected-commit: 294de9d6ac8c47a61d5ee14a79b6f216de65f872

  - uses: go/build
    with:
      packages: ./ksops.go
      output: ksops

subpackages:
  - name: ${{package.name}}-compat
    description: Compat package for ${{package.name}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/local/bin
          ln -sf /usr/bin/ksops "${{targets.contextdir}}"/usr/local/bin/ksops
          ln -sf /usr/bin/ksops "${{targets.contextdir}}"/usr/local/bin/kustomize-sops
          # I think this is redundant because we'll run our image as nonroot and upstream runs as root
          mkdir -p "${{targets.contextdir}}"/go/bin
          ln -sf /usr/bin/ksops "${{targets.contextdir}}"/go/bin/ksops
          ln -sf /usr/bin/ksops "${{targets.contextdir}}"/go/bin/kustomize-sops

update:
  enabled: true
  github:
    identifier: viaduct-ai/kustomize-sops
    strip-prefix: v

test:
  environment:
      contents:
        packages:
          - make
          - gpg
          - sops
  pipeline:
    - runs: |
        # Import test PGP keys
        make import-test-keys

        # Create a sample Kubernetes Secret
        cat <<EOF > secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: test-secret
        type: Opaque
        data:
          username: YWRtaW4=
          password: MWYyZDFlMmU2N2Rm
        EOF

        # Encrypt the Secret using SOPS
        sops -e secret.yaml > secret.enc.yaml

        # Define KSOPS Manifest
        cat <<EOF > secret-generator.yaml
        apiVersion: viaduct.ai/v1
        kind: ksops
        metadata:
          name: test-secret-generator
        files:
          - ./secret.enc.yaml
        EOF

        # Use KSOPS standalone to decrypt the secret
        ksops secret-generator.yaml > decrypted-secret.yaml

        # Verify that the decrypted secret matches the original secret
        diff <(yq eval 'del(.metadata)' secret.yaml) <(yq eval 'del(.metadata)' decrypted-secret.yaml)

        echo "KSOPS standalone decryption test PASSED."
