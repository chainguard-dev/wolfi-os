#!/bin/busybox sh

# Init for Wolfi OS
# - Environment variables:
#     VERBOSE=1 for debugging
#     CMDLINE=/path/to/file to override /proc/cmdline, useful for testing
# - Mount /proc, /sys, /dev if not already mounted
# - Allow for override of path to /init with init=/path/to/init on kernel /proc/cmdline
# - Allow for uuid or device path for root filesystem with root= on kernel /proc/cmdline
# - Mount root, if specified and found, switch_root to it, and run systemd as init
# - Otherwise, try to run systemd as init in the initrd

# Verbose debugging
info() { [ "$VERBOSE" = "1" ] && printf "INFO: $@\n" 1>&2; }

# Override /proc/cmdline path as environment variable, useful for testing
[ -z "$CMDLINE" ] && CMDLINE="/proc/cmdline"
info "cmdline = [$(cat $CMDLINE)]"

# Setup our system mounts if needed
mkdir -p /proc /sys /dev
findmnt /proc >/dev/null 2>&1 || mount -t proc none /proc
findmnt /sys >/dev/null  2>&1 || mount -t sysfs none /sys
findmnt /dev >/dev/null  2>&1 || mount -t devtmpfs none /dev

# Allow override of path to init on kernel command line
init="/usr/lib/systemd/systemd"
if grep -qs "init=" $CMDLINE 2>/dev/null; then
	init=$(sed -e "s:.*\binit=::" -e "s: .*::" $CMDLINE)
fi
info "Running [$init] as init"

# Find and mount our root partition by uuid or block device, if specified
if grep -qs "\broot=" $CMDLINE 2>/dev/null; then
	mkdir -p /root_dir
	root_dev=$(sed -e "s:.*\broot=::" -e "s: .*::" $CMDLINE)
	if (echo "$root_dev" | grep -qs "^[0-9a-f\-]\+$"); then
		# Looks like a UUID
		root_dev="--uuid $root_dev"
	fi
	info "Mounting [$root_dev]"
	if mount $root_dev /root_dir 2>/dev/null; then
		info "Switching to root"
		exec switch_root /root_dir $init
	fi
fi

# If we make it all the way here, try to boot in initrd
exec $init
