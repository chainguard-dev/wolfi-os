name: CI build action

on:
  pull_request:
    branches: ['main']

jobs:
  build:
    name: Build changed OS packages (CI)
    runs-on: ubuntu-16-core

    permissions:
      packages: write
      contents: read

    steps:
      - name: Generate snapshot date
        id: snapshot-date
        run: |
          echo "date=$(date -u +%Y%m%d)" >> $GITHUB_OUTPUT
          echo "epoch=$(date -u +%s)" >> $GITHUB_OUTPUT
        shell: bash

      - uses: actions/checkout@v3

      # - uses: chainguard-dev/actions/setup-melange@main
      # USED FOR TESTING - DO NOT MERGE!!!
      - uses: rawlingsj/actions-cg-dev/setup-melange@do_not_merge

      - uses: google-github-actions/setup-gcloud@v0

      - name: 'Generate local signing key'
        run: |
          make MELANGE="melange" local-melange.rsa

      - name: 'Sync public package repository'
        run: |
          mkdir "${{ github.workspace }}/packages"
          gsutil -m rsync -x "aarch64/.*" -r gs://wolfi-production-registry-destination/os/ "${{ github.workspace }}/packages/"
          find "${{ github.workspace }}/packages" -print -exec touch \{} \;

      - name: 'Build Wolfi'
        run: |
          make --debug MELANGE="sudo melange" MELANGE_DIR=/usr/share/melange MELANGE_EXTRA_OPTS="--create-build-log --keyring-append ${{ github.workspace }}/wolfi-signing.rsa.pub" REPO="${{ github.workspace }}/packages" -j1

      - name: Check for file
        id: file_check
        run: |
          if test -f "packages.log"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

# ADD BACK
      - name: Check sonames
        id: soname
        if: steps.file_check.outputs.exists == 'true'
        # uses: docker://ghcr.io/wolfi-dev/wolfictl:latest
        uses: docker://rawlingsj80/wolfictl:check3
        with:
          entrypoint: wolfictl
          args: check so-name

      # - uses: actions/setup-go@v3
      # - name: 'Generate dependency svg'
      #   if: steps.file_check.outputs.exists == 'true'
      #   run: |
      #     git clone --branch soname https://github.com/rawlingsj/wolfictl && cd wolfictl && go install && cd -
      #     wolfictl check so-name

      - name: Check svg
        id: svg
        uses: docker://ghcr.io/wolfi-dev/wolfictl:latest
        with:
          entrypoint: wolfictl
          args: svg

      - uses: actions/upload-artifact@v3
        with:
          name: dag.svg
          path: dag.svg
