name: CI build action

on:
  pull_request:
    branches: ['main']
  push:
    branches:
      - gh-readonly-queue/main/**

jobs:
  changes:
    name: Determine packages to test building
    runs-on: ubuntu-latest
    outputs:
      packages: ${{steps.package-list.outputs.packages}}

    steps:
      - uses: actions/checkout@v3

      - name: Look for changed files
        id: changes
        uses: tj-actions/changed-files@v35
        with:
          files: ./*.yaml

      - name: "Install wolfictl onto PATH"
        run: |
          # Copy wolfictl out of the wolfictl image and onto PATH
          TMP=$(mktemp -d)
          docker run --rm -i -v $TMP:/out --entrypoint /bin/sh ghcr.io/wolfi-dev/sdk:latest@sha256:78751faebed64630b64351fff0431e38cf08c70997c19a72146698ced651aad0 -c "cp /usr/bin/wolfictl /out"
          echo "$TMP" >> $GITHUB_PATH

      # Assuming that we have a list of changed files such as `foo.yaml` and `bar.yaml`, this
      # strips the list down into `foo` and `bar`.
      - name: Build package list
        id: package-list
        run: |
          printf "packages=" >> $GITHUB_OUTPUT

          wolfictl text -t name --pipeline-dir=./pipelines/ > packages-list
          while read pkg; do
            for file in ${{ steps.changes.outputs.all_changed_files }}; do
              [ "${file%.yaml}" = "$pkg" ] && printf "%s " ${file%.yaml} >> $GITHUB_OUTPUT
            done
          done < packages-list

          printf "\n" >> $GITHUB_OUTPUT

  build:
    name: Test building of packages
    runs-on: ubuntu-16-core
    needs: changes
    container:
      image: ghcr.io/wolfi-dev/sdk:latest@sha256:78751faebed64630b64351fff0431e38cf08c70997c19a72146698ced651aad0
      options: |
        --cap-add NET_ADMIN --cap-add SYS_ADMIN --security-opt seccomp=unconfined --security-opt apparmor:unconfined

    permissions:
      packages: write
      contents: read
      pull-requests: write # so we have permission to comment on pull requests

    steps:
      - uses: actions/checkout@v3

      - name: 'Trust the github workspace'
        run: |
          # This is to avoid fatal errors about "dubious ownership" because we are
          # running inside of a container action with the workspace mounted in.
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: 'Generate local signing key'
        run: |
          make MELANGE="melange" local-melange.rsa

      - name: 'Build Wolfi'
        run: |
          for package in ${{needs.changes.outputs.packages}}; do
            make MELANGE="melange" MELANGE_EXTRA_OPTS="--create-build-log" REPO="$GITHUB_WORKSPACE/packages" BUILDWORLD=no package/$package -j1
          done

      - name: Check for file
        id: file_check
        run: |
          if test -f "packages.log"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      # Note: vulns found in scans do not currently block CI
      - name: 'Grype scan APKs'
        if: steps.file_check.outputs.exists == 'true'
        run: |
          set -x
          for line in `cat packages.log`; do
            # convert the melange output (e.g. "x86_64|grype|grype|0.63.0-r1" ) to an actual apk path
            apk_path=$(echo "${line}" | awk '{ split($1, pkg, "|"); printf("packages/%s/%s-%s.apk\n", pkg[1], pkg[3], pkg[4]) }')
            ./scripts/grype-scan-apk.sh "${apk_path}"
          done

      - name: Check sonames
        if: steps.file_check.outputs.exists == 'true'
        run: |
          wolfictl check so-name

      - name: Check diff
        if: steps.file_check.outputs.exists == 'true'
        # Let's not fail the whole job if this step fails as it is for improved UX rather than an enforced check
        continue-on-error: true
        run: |
          wolfictl check diff

      - name: Check for diff file
        id: diff_file_check
        run: |
          if test -f "diff.log"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: PR comment diff
        if: steps.diff_file_check.outputs.exists == 'true'
        uses: thollander/actions-comment-pull-request@632cf9ce90574d125be56b5f3405cda41a84e2fd # v2.3.1
        # We're seeing jobs using merge queues fail
        continue-on-error: true
        with:
          filePath: diff.log
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

       # Note: vulns found in scans do not currently block CI
      - name: Wolfictl scan
        id: wolfictl_scan
        if: steps.file_check.outputs.exists == 'true'
        continue-on-error: true
        run: |
         ./scripts/wolfi-scan-apk.sh > wolfi_scan_results.md

      - name: Check for scan results file
        id: scan_file_check
        run: |
          if test -f "wolfi_scan_results.md"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: PR comment scan
        uses: thollander/actions-comment-pull-request@632cf9ce90574d125be56b5f3405cda41a84e2fd # v2.3.1
        # We're seeing jobs using merge queues fail
        continue-on-error: true
        if: steps.scan_file_check.outputs.exists == 'true'
        with:
          filePath: wolfi_scan_results.md
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
