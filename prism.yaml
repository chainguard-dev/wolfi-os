package:
  name: prism
  version: v5.11.2
  epoch: 0
  description: "A set of packages for API mocking and contract testing with OpenAPI v2 and OpenAPI v3.x"
  url: https://github.com/stoplightio/prism
  copyright:
    - license: Apache 2.0

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - build-base
      - nodejs-18
      - npm
      - yarn
  environment:
    NODE_ENV: "production"

pipeline:
  - uses: git-checkout
    with:
      expected-commit: f7788e25710a03628f81bb86e8d6657dc72b7c49
      repository: https://github.com/stoplightio/prism
      tag: ${{package.version}}
  
  - runs: |
      # Create a top-level project directory to house our prism installation
      # See 'dependencies' build stage of prism/Dockerfile (https://github.com/stoplightio/prism/blob/master/Dockerfile)

      mkdir -p ${{targets.destdir}}/usr/src/prism/node_modules
      cp package.json ${{targets.destdir}}/usr/src/prism/

      # Copy subpackages into the project directory
      for pkg in core http http-server cli
      do
        mkdir -p ${{targets.destdir}}/usr/src/prism/packages/$pkg/node_modules
        cp packages/$pkg/package.json ${{targets.destdir}}/usr/src/prism/packages/$pkg/
      done
  
  - working-directory: ${{targets.destdir}}/usr/src/prism/
    runs: |
      # Install production dependencies for subpackages
      yarn --production

  - working-directory: /home/build/
  - runs: |
      # Build the project
      # See 'compiler' build stage of prism/Dockerfile (https://github.com/stoplightio/prism/blob/master/Dockerfile)

      # The next command (yarn build) fails :(
      # Some hacks that I have tried without luck:
      #   yarn add ttypescript --dev -W     # Add the ttsc compiler manually (works with errors)
      #   yarn add @types/lodash --dev -W   # Add missing types for lodash (works)
      #   yarn add @types/node --dev -W     # Add missing types for node (works)
      #   yarn add @types/pino -dev -W      # Does not work. Apparently pino has no @types
      yarn && yarn build

      # Copy build artifacts to the target project directory
      for pkg in core http http-server cli
      do
        cp -r packages/$pkg/dist/ ${{targets.destdir}}/usr/src/prism/packages/$pkg/
      done

update:
  enabled: true
  github:
    identifier: stoplightio/prism

