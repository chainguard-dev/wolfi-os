package:
  name: dart
  version: 3.5.3
  epoch: 0
  description: The Dart SDK, including the VM, JS and Wasm compilers, analysis, core libraries, and more.
  copyright:
    - license: BSD-3-Clause
  dependencies:
    runtime:
      - ca-certificates-bundle

environment:
  contents:
    packages:
      - bash
      - bind-tools
      - busybox
      - ca-certificates
      - ca-certificates-bundle
      - curl
      - git
      - python3
      - xz

pipeline:
  - name: "clone the source code"
    runs: |
      mkdir -p ${{targets.destdir}}/usr/lib/
      mkdir -p ${{targets.destdir}}/runtime
      git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git /home/depot_tools
      export PATH=$PATH:/home/depot_tools
      mkdir -p /home/dart-sdk
      cd /home/dart-sdk
      fetch dart
      cd sdk
      git fetch --tags --all
      git checkout tags/${{package.version}} -b ${{package.version}}
      gclient sync

  - if: ${{build.arch}} == "x86_64"
    working-directory: /home/dart-sdk/sdk
    runs: |
      ./tools/build.py --mode release --arch x64 create_sdk
      mv out/ReleaseX64/dart-sdk ${{targets.destdir}}/usr/lib/dart
      ln -sf /lib64/ld-linux-x86-64.so.2 ${{targets.destdir}}/runtime/ld-linux-x86-64.so.2

  - if: ${{build.arch}} == "aarch64"
    working-directory: /home/dart-sdk/sdk
    runs: |
      ./tools/build.py --mode release --arch arm64 create_sdk
      mv out/ReleaseARM64/dart-sdk ${{targets.destdir}}/usr/lib/dart
      ln -sf /lib/ld-linux-aarch64.so.1 ${{targets.destdir}}/runtime/ld-linux-aarch64.so.1

  - name: "symlink dart binary and required libraries to runtime dir"
    runs: |
      mkdir -p ${{targets.destdir}}/usr/bin
      mkdir -p ${{targets.destdir}}/runtime/etc/ssl
      mkdir -p ${{targets.destdir}}/runtime/usr/share
      mkdir -p ${{targets.destdir}}/runtime/lib
      cp -R /etc/ssl/certs ${{targets.destdir}}/runtime/etc/ssl
      cp -R /usr/share/ca-certificates ${{targets.destdir}}/runtime/usr/share
      FILES="/etc/nsswitch.conf /lib/libc.so.6 /lib/libdl.so.2 /lib/libm.so.6 /lib/libnss_dns.so.2 /lib/libpthread.so.0 /lib/libresolv.so.2 /lib/librt.so.1"
      for file in $FILES; do
        cp -L $file ${{targets.destdir}}/runtime/
      done
      ln -sf /usr/lib/dart/bin/dart "${{targets.destdir}}"/usr/bin/dart

  - uses: git-checkout
    with:
      repository: https://github.com/dart-lang/sdk
      tag: ${{package.version}}
      expected-commit: 179da3ba67ead156a3ba718bd798cb7a1728e741

update:
  enabled: true
  ignore-regex-patterns:
    - '.*\.dev$'
    - '.*\.alpha$'
    - '.*\.beta$'
    - "analyzer-*"
    - "meta-*"
    - "merge*"
  git: {}
  schedule:
    period: weekly
    reason: upstream releases stable version every 3 months but polling can be done weekly so that we don't miss things.

test:
  environment:
    contents:
      packages:
        - ca-certificates-bundle
  pipeline:
    - name: "dart version"
      runs: /usr/bin/dart --version
    - name: "hello world dart program"
      runs: |
        cat > /tmp/hello.dart <<EOF
        void main() {
          print('Hello, World!');
        }
        EOF
        /usr/bin/dart /tmp/hello.dart
    - name: add lots of packages to a project
      runs: |
        mkdir dart-project && cd dart-project
        cat > pubspec.yaml <<EOF
        name: my_app
        version: 1.0.0+1
        environment:
          sdk: ">=2.12.0 <4.0.0"
        EOF
        dart pub add vector_math json http logging path grpc
    - name: cli app and dependency resolution
      runs: |
        dart create -t console cli --no-pub
        cd cli
        dart pub deps
        dart run
    - name: demo web application
      runs: |
        dart pub global activate webdev
        export PATH="$PATH":"$HOME/.pub-cache/bin"
        dart create -t web quickstart
        cd quickstart
        webdev build
    - name: unix and windows compile check
      runs: |
        dart create -t console demo-cli
        cd demo-cli
        dart test
        dart compile exe bin/demo_cli.dart -o demo_cli
        ./demo_cli
        dart compile exe bin/demo_cli.dart -o demo_cli.exe
