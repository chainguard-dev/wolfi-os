diff --git a/common/src/java/org/apache/hadoop/hive/common/JvmMetrics.java b/common/src/java/org/apache/hadoop/hive/common/JvmMetrics.java
index 6edf396288..521ea83525 100644
--- a/common/src/java/org/apache/hadoop/hive/common/JvmMetrics.java
+++ b/common/src/java/org/apache/hadoop/hive/common/JvmMetrics.java
@@ -20,7 +20,6 @@
 
 import static org.apache.hadoop.hive.common.JvmMetricsInfo.*;
 
-import org.apache.hadoop.log.metrics.EventCounter;
 import org.apache.hadoop.metrics2.MetricsCollector;
 import org.apache.hadoop.metrics2.MetricsInfo;
 import org.apache.hadoop.metrics2.MetricsRecordBuilder;
@@ -96,7 +95,6 @@ public void getMetrics(MetricsCollector collector, boolean all) {
     getMemoryUsage(rb);
     getGcUsage(rb);
     getThreadUsage(rb);
-    getEventCounters(rb);
   }
 
   private void getMemoryUsage(MetricsRecordBuilder rb) {
@@ -177,11 +175,4 @@ private void getThreadUsage(MetricsRecordBuilder rb) {
         .addGauge(ThreadsTimedWaiting, threadsTimedWaiting)
         .addGauge(ThreadsTerminated, threadsTerminated);
   }
-
-  private void getEventCounters(MetricsRecordBuilder rb) {
-    rb.addCounter(LogFatal, EventCounter.getFatal())
-        .addCounter(LogError, EventCounter.getError())
-        .addCounter(LogWarn, EventCounter.getWarn())
-        .addCounter(LogInfo, EventCounter.getInfo());
-  }
 }
diff --git a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/tools/metatool/MetaToolTaskListExtTblLocs.java b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/tools/metatool/MetaToolTaskListExtTblLocs.java
index f9d34ee13f..6eccfb6654 100644
--- a/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/tools/metatool/MetaToolTaskListExtTblLocs.java
+++ b/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/tools/metatool/MetaToolTaskListExtTblLocs.java
@@ -341,7 +341,7 @@ private void createOutputList(Set<String> locations, String outputDir, String db
    * Table-name followed by "*" indicates that all partitions are inside table location.
    * Otherwise, we record the number of partitions covered by table location.
    */
-  private JSONArray listOutputEntities(HashSet<String> locations) {
+  private JSONArray listOutputEntities(HashSet<String> locations) throws JSONException {
     List<String> listEntities = new ArrayList<>();
     for(String loc : locations) {
       DataLocation data = inputLocations.get(loc);
