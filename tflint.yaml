package:
  name: tflint
  version: 0.53.0
  epoch: 1
  description: A Pluggable Terraform Linter
  copyright:
    - license: MPL-2.0

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - go

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 51fe0738442a0cbcc6d55ec7326abe807bce763f
      repository: https://github.com/terraform-linters/tflint
      tag: v${{package.version}}

  - runs: |
      make build
      mkdir -p ${{targets.destdir}}/usr/bin
      mv dist/tflint ${{targets.destdir}}/usr/bin

  - uses: strip

update:
  enabled: true
  github:
    identifier: terraform-linters/tflint
    use-tag: true
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - bash
        - coreutils
  pipeline:
    - name: "Version check"
      runs: |
        tflint --version
    - name: "Help output verification"
      runs: |
        tflint --help
    - name: "Verify linting passes with valid configuration"
      runs: |
        cat > main.tf <<EOF
        terraform {
          required_version = ">= 1.0.0"
          required_providers {
            aws = {
              source  = "hashicorp/aws"
              version = "~> 4.0"
            }
          }
        }

        resource "aws_instance" "example" {
          ami           = "ami-12345678"
          instance_type = "t2.micro"
        }
        EOF
        tflint
    - name: "Expected failure: missing required_providers"
      runs: |
        cat > missing_providers.tf <<EOF
        resource "aws_instance" "example" {
          ami           = "ami-12345678"
          instance_type = "t2.micro"
        }
        EOF
        if tflint missing_providers.tf; then
          echo "Expected linting to fail but it passed"
          exit 1
        fi
    - name: "Expected failure: missing required_version"
      runs: |
        cat > missing_version.tf <<EOF
        terraform {
          required_providers {
            aws = {
              source  = "hashicorp/aws"
              version = "~> 4.0"
            }
          }
        }
        resource "aws_instance" "example" {
          ami           = "ami-12345678"
          instance_type = "t2.micro"
        }
        EOF
        if tflint missing_version.tf; then
          echo "Expected linting to fail but it passed"
          exit 1
        fi
    - name: "Multiple files with expected failures"
      runs: |
        mkdir test_dir
        cat > test_dir/main.tf <<EOF
        resource "aws_instance" "main" {
          ami = "ami-12345678"
        }
        EOF
        cat > test_dir/variables.tf <<EOF
        variable "region" {
          type = string
        }
        EOF
        if tflint test_dir/; then
          echo "Expected linting to fail but it passed"
          exit 1
        fi
