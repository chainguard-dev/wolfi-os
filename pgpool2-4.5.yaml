package:
  name: pgpool2-4.5
  version: 4.5.4
  epoch: 0
  description: Middleware that works between PostgreSQL servers and a PostgreSQL database client.
  copyright:
    - license: BSD-3-Clause AND MIT
  dependencies:
    provides:
      - pgpool2=${{package.full-version}}

environment:
  contents:
    packages:
      - autoconf
      - automake
      - bison
      - build-base
      - busybox
      - flex
      - libtool
      - openssl-dev
      - postgresql-dev

var-transforms:
  - from: ${{package.version}}
    match: \.
    replace: _
    to: mangled-package-version

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/pgpool/pgpool2
      tag: V${{vars.mangled-package-version}}
      expected-commit: 54ccb32a3a09fb9984329562db430a96e7b8478c

  - uses: autoconf/configure
    with:
      opts: |
        --sysconfdir=/etc/pgpool2 --with-openssl

  # build src/parser explicitly to avoid build failures due to missing parser files with -j flag
  - runs: |
      make -C src/parser V=1

  - uses: autoconf/make

  - uses: autoconf/make-install

  - uses: strip

  - runs: |
      mkdir -p "${{targets.destdir}}/var/run/pgpool"

subpackages:
  - name: ${{package.name}}-dev
    pipeline:
      - uses: split/dev
    dependencies:
      provides:
        - pgpool2-dev=${{package.full-version}}
      runtime:
        - ${{package.name}}

  - name: ${{package.name}}-bitnami-compat
    dependencies:
      provides:
        - pgpool2-bitnami-compat=${{package.full-version}}
      runtime:
        - busybox
        - openldap
    pipeline:
      - uses: bitnami/compat
        with:
          image: pgpool
          version-path: 4/debian-12
      # copy the patch file to patch the output form bitnami/compat and apply it
      - runs: |
          cp bitnami-compat-remove-os-flavour.patch "${{targets.subpkgdir}}/"
      - uses: patch
        working-directory: "${{targets.subpkgdir}}"
        with:
          patches: bitnami-compat-remove-os-flavour.patch
      # remove patch file to prevent it from being packaged
      - runs: |
          rm "${{targets.subpkgdir}}/bitnami-compat-remove-os-flavour.patch"
      - runs: |
          # symlink all binaries to /opt/bitnami/pgpool/bin
          mkdir -p "${{targets.subpkgdir}}/opt/bitnami/pgpool/bin"
          for binary in $(find "${{targets.destdir}}/usr/bin" -type f perm +0100) ; do
            bin="$(basename "$binary")"
            ln -s "/usr/bin/${bin}" "${{targets.subpkgdir}}/opt/bitnami/pgpool/bin/${bin}"
          done

          # symlink /etc/pgpool2 as /opt/bitnami/pgpool/etc
          ln -s /etc/pgpool2 "${{targets.subpkgdir}}/opt/bitnami/pgpool/etc"

update:
  enabled: false
  manual: true
  exclude-reason: Versions using underscore
  github:
    identifier: pgpool/pgpool2
    strip-prefix: V

test:
  environment:
    contents:
      packages:
        - postgresql
        - postgresql-client
        - shadow
        - sudo-rs
    environment:
      PGDATA: /tmp/test_db
      PGUSER: wolfi
      PGPASSWORD: custompassword
  pipeline:
    - name: "Test binaries"
      runs: |
        pgpool --version
        pgpool --help
    - name: "Configure postgresql"
      runs: |
        useradd $PGUSER
        sudo -u $PGUSER initdb -D /tmp/test_db
        sudo -u $PGUSER pg_ctl -D /tmp/test_db -l /tmp/logfile start
    - name: "Create database and table"
      runs: |
        createdb customdatabase
        psql customdatabase -c "CREATE TABLE IF NOT EXISTS test_table (id INTEGER, str TEXT); INSERT INTO test_table VALUES(1, 'Test value');"
    - name: "Configure and start pgpool"
      runs: |
        # 28b48ce7ae1f2db6539f7ed94728d992 = custompassword
        echo "wolfi:28b48ce7ae1f2db6539f7ed94728d992" >/etc/pgpool2/pcp.conf
        cp /etc/pgpool2/pool_hba.conf.sample /etc/pgpool2/pool_hba.conf
        cat >/etc/pgpool2/pgpool.conf <<EOF
        listen_addresses = '*'
        port = 55432
        backend_hostname0 = 'localhost'
        backend_port0 = 5432
        EOF
        pgpool
    - name: "Test query"
      runs: |
        # connect via pgpool and validate connection ; retry in case pgpool is not up yet
        for attempt in $(seq 1 10) ; do
          if ! psql -Uwolfi -h127.0.0.1 -p55432 customdatabase -c "SELECT * FROM test_table" \
            | grep 'Test value' ; then
            sleep 3
          else
            exit 0
          fi
        done
        echo "Unable to query data"
        exit 1
