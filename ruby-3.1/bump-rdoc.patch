# Source: https://github.com/ruby/ruby/pull/10318

From 04db47dbe41d643b50d99615bd5c7b3737afb6e0 Mon Sep 17 00:00:00 2001
From: Hiroshi SHIBATA <hsbt@ruby-lang.org>
Date: Thu, 21 Mar 2024 15:44:45 +0900
Subject: [PATCH] Merge RDoc-6.4.1.1

---
 lib/rdoc/store.rb   | 45 ++++++++++++++++++++++++++-------------------
 lib/rdoc/version.rb |  2 +-
 2 files changed, 27 insertions(+), 20 deletions(-)

diff --git a/lib/rdoc/store.rb b/lib/rdoc/store.rb
index 5ba671ca1b6216..c793e49ed845ed 100644
--- a/lib/rdoc/store.rb
+++ b/lib/rdoc/store.rb
@@ -556,9 +556,7 @@ def load_all
   def load_cache
     #orig_enc = @encoding

-    File.open cache_path, 'rb' do |io|
-      @cache = Marshal.load io.read
-    end
+    @cache = marshal_load(cache_path)

     load_enc = @cache[:encoding]

@@ -615,9 +613,7 @@ def load_class klass_name
   def load_class_data klass_name
     file = class_file klass_name

-    File.open file, 'rb' do |io|
-      Marshal.load io.read
-    end
+    marshal_load(file)
   rescue Errno::ENOENT => e
     error = MissingFileError.new(self, file, klass_name)
     error.set_backtrace e.backtrace
@@ -630,14 +626,10 @@ def load_class_data klass_name
   def load_method klass_name, method_name
     file = method_file klass_name, method_name

-    File.open file, 'rb' do |io|
-      obj = Marshal.load io.read
-      obj.store = self
-      obj.parent =
-        find_class_or_module(klass_name) || load_class(klass_name) unless
-          obj.parent
-      obj
-    end
+    obj = marshal_load(file)
+    obj.store = self
+    obj.parent ||= find_class_or_module(klass_name) || load_class(klass_name)
+    obj
   rescue Errno::ENOENT => e
     error = MissingFileError.new(self, file, klass_name + method_name)
     error.set_backtrace e.backtrace
@@ -650,11 +642,9 @@ def load_method klass_name, method_name
   def load_page page_name
     file = page_file page_name

-    File.open file, 'rb' do |io|
-      obj = Marshal.load io.read
-      obj.store = self
-      obj
-    end
+    obj = marshal_load(file)
+    obj.store = self
+    obj
   rescue Errno::ENOENT => e
     error = MissingFileError.new(self, file, page_name)
     error.set_backtrace e.backtrace
@@ -976,4 +966,21 @@ def unique_modules
     @unique_modules
   end

+  private
+  def marshal_load(file)
+    File.open(file, 'rb') {|io| Marshal.load(io, MarshalFilter)}
+  end
+
+  MarshalFilter = proc do |obj|
+    case obj
+    when true, false, nil, Array, Class, Encoding, Hash, Integer, String, Symbol, RDoc::Text
+    else
+      unless obj.class.name.start_with?("RDoc::")
+        raise TypeError, "not permitted class: #{obj.class.name}"
+      end
+    end
+    obj
+  end
+  private_constant :MarshalFilter
+
 end
diff --git a/lib/rdoc/version.rb b/lib/rdoc/version.rb
index 86c5b360fd6e5a..c3ff6640f572b6 100644
--- a/lib/rdoc/version.rb
+++ b/lib/rdoc/version.rb
@@ -3,6 +3,6 @@ module RDoc
   ##
   # RDoc version you are using

-  VERSION = '6.4.0'
+  VERSION = '6.4.1.1'

 end
